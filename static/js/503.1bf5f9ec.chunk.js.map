{"version":3,"file":"static/js/503.1bf5f9ec.chunk.js","mappings":"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","sources":["configs/ctIds.config.ts","hooks/useLeaderboard.tsx","configs/badges.config.ts","configs/verifiedUsers.config.ts","components/Badges/Badges.tsx","hooks/useProfileData.tsx","components/ProfileModal/ProfileModal.tsx","components/LeaderboardCard/LeaderboardCard.tsx","components/SelectionRow/SelectionRow.tsx","pages/Leaderboard/Leaderboard.tsx","pages/Leaderboard/index.tsx","util/converters.ts"],"sourcesContent":["const ctIds = [\r\n  {\r\n    id: \"m6h1l4xd\",\r\n    number: 65,\r\n  },\r\n  {\r\n    id: \"m5k2an8p\",\r\n    number: 64,\r\n  },\r\n  {\r\n    id: \"m4q6vtme\",\r\n    number: 63,\r\n  },\r\n  {\r\n    id: \"m4q6ddt7\",\r\n    number: 62,\r\n  },\r\n  {\r\n    id: \"m4adofkk\",\r\n    number: 61,\r\n  },\r\n  {\r\n    id: \"m3rvyepv\",\r\n    number: 60,\r\n  },\r\n  {\r\n    id: \"m34yd7qs\",\r\n    number: 59,\r\n  },\r\n  {\r\n    id: \"m2kwlt60\",\r\n    number: 58,\r\n  },\r\n  {\r\n    id: \"m22b3l2q\",\r\n    number: 57,\r\n  },\r\n  {\r\n    id: \"m18f2i05\",\r\n    number: 56,\r\n  },\r\n  {\r\n    id: \"m0n34q7z\",\r\n    number: 55,\r\n  },\r\n  {\r\n    id: \"m05t53n4\",\r\n    number: 54,\r\n  },\r\n  {\r\n    id: \"lzt9vnfv\",\r\n    number: 53,\r\n  },\r\n  {\r\n    id: \"lywiirac\",\r\n    number: 52,\r\n  },\r\n  {\r\n    id: \"lygltxgu\",\r\n    number: 51,\r\n  },\r\n  {\r\n    id: \"lxo2ds1k\",\r\n    number: 50,\r\n  },\r\n  {\r\n    id: \"lx9ho5f2\",\r\n    number: 49,\r\n  },\r\n  {\r\n    id: \"lwsgoq2e\",\r\n    number: 48,\r\n  },\r\n  {\r\n    id: \"lw3zptqw\",\r\n    number: 47,\r\n  },\r\n  {\r\n    id: \"lvk1it2j\",\r\n    number: 46,\r\n  },\r\n  {\r\n    id: \"luub1xz5\",\r\n    number: 45,\r\n  },\r\n  {\r\n    id: \"lug12fgd\",\r\n    number: 44,\r\n  },\r\n  {\r\n    id: \"lts2aqan\",\r\n    number: 43,\r\n  },\r\n  {\r\n    id: \"ltkys2el\",\r\n    number: 42,\r\n  },\r\n  {\r\n    id: \"lswkbyus\",\r\n    number: 41,\r\n  },\r\n  {\r\n    id: \"ls2jg6ct\",\r\n    number: 40,\r\n  },\r\n  {\r\n    id: \"lrlbwtxn\",\r\n    number: 39,\r\n  },\r\n  {\r\n    id: \"lr3uz1d8\",\r\n    number: 38,\r\n  },\r\n  {\r\n    id: \"lqa43ghl\",\r\n    number: 37,\r\n  },\r\n  {\r\n    id: \"lq63jr4t\",\r\n    number: 36,\r\n  },\r\n  {\r\n    id: \"lphkfmue\",\r\n    number: 35,\r\n  },\r\n  {\r\n    id: \"lorujl6k\",\r\n    number: 34,\r\n  },\r\n  {\r\n    id: \"lo3dbb57\",\r\n    number: 33,\r\n  },\r\n  {\r\n    id: \"lncmwv1g\",\r\n    number: 32,\r\n  },\r\n  {\r\n    id: \"lndqbo35\",\r\n    number: 31,\r\n  },\r\n  {\r\n    id: \"lmpnzhq6\",\r\n    number: 30,\r\n  },\r\n  {\r\n    id: \"lm77zack\",\r\n    number: 29,\r\n  },\r\n  {\r\n    id: \"lleh5fpm\",\r\n    number: 28,\r\n  },\r\n  {\r\n    id: \"ll1f7vl8\",\r\n    number: 27,\r\n  },\r\n  {\r\n    id: \"lkj6emus\",\r\n    number: 26,\r\n  },\r\n  {\r\n    id: \"ljxai1s8\",\r\n    number: 25,\r\n  },\r\n  {\r\n    id: \"ljetrjjf\",\r\n    number: 24,\r\n  },\r\n  {\r\n    id: \"lisaoa37\",\r\n    number: 23,\r\n  },\r\n  {\r\n    id: \"lhzbbljg\",\r\n    number: 22,\r\n  },\r\n  {\r\n    id: \"lhgt6hxj\",\r\n    number: 21,\r\n  },\r\n  {\r\n    id: \"lgzmgxif\",\r\n    number: 20,\r\n  },\r\n  {\r\n    id: \"lgli8qmt\",\r\n    number: 19,\r\n  },\r\n  {\r\n    id: \"lg1ioh3o\",\r\n    number: 18,\r\n  },\r\n  {\r\n    id: \"lfbp5rsx\",\r\n    number: 17,\r\n  },\r\n  {\r\n    id: \"lenh39dp\",\r\n    number: 16,\r\n  },\r\n  {\r\n    id: \"ledh1q44\",\r\n    number: 15,\r\n  },\r\n  {\r\n    id: \"ldkqe7g6\",\r\n    number: 14,\r\n  },\r\n  {\r\n    id: \"ld2c7egr\",\r\n    number: 13,\r\n  },\r\n  {\r\n    id: \"lcjmdijk\",\r\n    number: 12,\r\n  },\r\n  {\r\n    id: \"lbn286o5\",\r\n    number: 11,\r\n  },\r\n  {\r\n    id: \"lbei2nd1\",\r\n    number: 10,\r\n  },\r\n  {\r\n    id: \"lau3vdb5\",\r\n    number: 9,\r\n  },\r\n  {\r\n    id: \"labw9mm1\",\r\n    number: 8,\r\n  },\r\n  {\r\n    id: \"l9qakvod\",\r\n    number: 7,\r\n  },\r\n  {\r\n    id: \"l9dkq0ma\",\r\n    number: 6,\r\n  },\r\n  {\r\n    id: \"l8t9h7wa\",\r\n    number: 5,\r\n  },\r\n  {\r\n    id: \"l884uw8u\",\r\n    number: 4,\r\n  },\r\n  {\r\n    id: \"l7i90j39\",\r\n    number: 3,\r\n  },\r\n  {\r\n    id: \"l76rtr72\",\r\n    number: 2,\r\n  },\r\n  {\r\n    id: \"l6efnna0\",\r\n    number: 1,\r\n  },\r\n];\r\n\r\nexport default ctIds;\r\n","import { useMemo, useState } from \"react\";\r\nimport { BossMode, EventType } from \"types/events\";\r\nimport { LeaderboardData, LeaderboardEntry } from \"types/leaderboards\";\r\nimport { Event } from \"types/events\";\r\n\r\nexport const useLeaderboard = (\r\n  eventType: EventType,\r\n  eventPos: number,\r\n  page: number,\r\n  bossMode?: BossMode,\r\n  numOfPages: number = 1\r\n) => {\r\n  const [data, setData] = useState<LeaderboardData<LeaderboardEntry[]>>(\r\n    {} as LeaderboardData<LeaderboardEntry[]>\r\n  );\r\n  const [events, setEvents] = useState<Event[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useMemo(() => {\r\n    const raceUrl = \"https://data.ninjakiwi.com/btd6/races/\";\r\n    const bossUrl = \"https://data.ninjakiwi.com/btd6/bosses/\";\r\n    const ctUrl = \"https://data.ninjakiwi.com/btd6/ct/\";\r\n\r\n    const headers: RequestInit = { mode: \"cors\" };\r\n\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      setError(false);\r\n      console.log(\"fetching leaderboards\");\r\n      try {\r\n        let url = \"\";\r\n        if (eventType === \"Race\") {\r\n          const racesResponse = await fetch(raceUrl);\r\n          const raceData = await racesResponse.json();\r\n          setEvents(raceData.body);\r\n\r\n          url = raceData.body[eventPos].leaderboard;\r\n        } else if (eventType === \"Boss\") {\r\n          const bossesResponse = await fetch(bossUrl);\r\n          const bossData = await bossesResponse.json();\r\n          setEvents(bossData.body);\r\n\r\n          if (bossMode === \"Elite\") {\r\n            url = bossData.body[eventPos].leaderboard_elite_players_1;\r\n          } else {\r\n            url = bossData.body[eventPos].leaderboard_standard_players_1;\r\n          }\r\n        } else if (eventType === \"Boss2\") {\r\n          const bossesResponse = await fetch(bossUrl);\r\n          const bossData = await bossesResponse.json();\r\n          setEvents(bossData.body);\r\n\r\n          if (bossMode === \"Elite\") {\r\n            url =\r\n              bossData.body[eventPos].leaderboard_elite_players_1.slice(0, -1) +\r\n              \"2\";\r\n          } else {\r\n            url =\r\n              bossData.body[eventPos].leaderboard_standard_players_1.slice(\r\n                0,\r\n                -1\r\n              ) + \"2\";\r\n          }\r\n        } else if (eventType === \"Boss3\") {\r\n          const bossesResponse = await fetch(bossUrl);\r\n          const bossData = await bossesResponse.json();\r\n          setEvents(bossData.body);\r\n\r\n          if (bossMode === \"Elite\") {\r\n            url =\r\n              bossData.body[eventPos].leaderboard_elite_players_1.slice(0, -1) +\r\n              \"3\";\r\n          } else {\r\n            url =\r\n              bossData.body[eventPos].leaderboard_standard_players_1.slice(\r\n                0,\r\n                -1\r\n              ) + \"3\";\r\n          }\r\n        } else if (eventType === \"Boss4\") {\r\n          const bossesResponse = await fetch(bossUrl);\r\n          const bossData = await bossesResponse.json();\r\n          setEvents(bossData.body);\r\n\r\n          if (bossMode === \"Elite\") {\r\n            url =\r\n              bossData.body[eventPos].leaderboard_elite_players_1.slice(0, -1) +\r\n              \"4\";\r\n          } else {\r\n            url =\r\n              bossData.body[eventPos].leaderboard_standard_players_1.slice(\r\n                0,\r\n                -1\r\n              ) + \"4\";\r\n          }\r\n        } else if (eventType === \"CtTeam\") {\r\n          const ctResponse = await fetch(ctUrl);\r\n          const ctData = await ctResponse.json();\r\n          setEvents(ctData.body);\r\n\r\n          url = ctData.body[eventPos].leaderboard_team;\r\n        } else {\r\n          const ctResponse = await fetch(ctUrl);\r\n          const ctData = await ctResponse.json();\r\n          setEvents(ctData.body);\r\n          console.log(ctData);\r\n\r\n          url = ctData.body[eventPos].leaderboard_player;\r\n        }\r\n\r\n        const response = await fetch(url + \"?page=\" + page, headers);\r\n\r\n        const jsonData: LeaderboardData<LeaderboardEntry[]> =\r\n          await response.json();\r\n\r\n        if (!jsonData.success) {\r\n          throw new Error(\"Unsuccessful: \" + jsonData.error);\r\n        }\r\n\r\n        // Add additional pages to the original JSON.\r\n        // Start at 1 since we already did the 1st page.\r\n        // This starts us at page 2, assuming page = 1.\r\n        console.log(numOfPages);\r\n        for (let i = 1; i < numOfPages; i++) {\r\n          const response = await fetch(url + \"?page=\" + (page + i), headers);\r\n\r\n          if (!response.ok) {\r\n            throw new Error(\"Failed to fetch data\");\r\n          }\r\n\r\n          const newJsonData: LeaderboardData<LeaderboardEntry[]> =\r\n            await response.json();\r\n\r\n          jsonData.body = jsonData.body.concat(newJsonData.body);\r\n          console.log(\"got page: \", i);\r\n        }\r\n\r\n        if (\r\n          eventType === \"Boss2\" ||\r\n          eventType === \"Boss3\" ||\r\n          eventType === \"Boss4\"\r\n        ) {\r\n          let nextPlayersToCheck = 0;\r\n          switch (eventType) {\r\n            case \"Boss2\":\r\n              nextPlayersToCheck = 1;\r\n              break;\r\n            case \"Boss3\":\r\n              nextPlayersToCheck = 2;\r\n              break;\r\n            case \"Boss4\":\r\n              nextPlayersToCheck = 3;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          const players: { displayName: string; profile: string }[][] = [];\r\n          const indecesToSplice: number[] = [];\r\n          for (let i = 0; i < jsonData.body.length; i++) {\r\n            const playersEntry: { displayName: string; profile: string }[] = [];\r\n            // playersEntry.push({\r\n            //   displayName: jsonData.body[i].displayName,\r\n            //   profile: jsonData.body[i].profile,\r\n            // });\r\n            const currentPlayerIndex = i;\r\n            for (\r\n              let j = currentPlayerIndex + 1;\r\n              j <= currentPlayerIndex + nextPlayersToCheck;\r\n              j++\r\n            ) {\r\n              if (j >= jsonData.body.length) {\r\n                break;\r\n              }\r\n              if (\r\n                jsonData.body[i].scoreParts[0].score ===\r\n                jsonData.body[j].scoreParts[0].score\r\n              ) {\r\n                playersEntry.push({\r\n                  displayName: jsonData.body[j].displayName,\r\n                  profile: jsonData.body[j].profile,\r\n                });\r\n                indecesToSplice.push(j);\r\n                i++;\r\n              }\r\n              players.push(playersEntry);\r\n              jsonData.body[currentPlayerIndex].otherPlayers = playersEntry;\r\n            }\r\n          }\r\n          indecesToSplice.reverse().map((x) => {\r\n            jsonData.body.splice(x, 1);\r\n          });\r\n        }\r\n\r\n        setData(jsonData);\r\n      } catch (error) {\r\n        setError(true);\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [eventType, eventPos, page, bossMode]);\r\n\r\n  return { data, events, loading, error };\r\n};\r\n","const badges = [\r\n  {\r\n    profileUrl:\r\n      \"https://data.ninjakiwi.com/btd6/users/9fbf128f8cc5fcf61c14894f5a25e5259a521fbf9743d96e\",\r\n    badgeName: \"Developer\",\r\n    badgeTip: \"Developed this site.\",\r\n  },\r\n  // {\r\n  //   profileUrl:\r\n  //     \"https://data.ninjakiwi.com/btd6/users/9fbf128f8cc5fcf61c14894f5a25e5259a521fbf9743d96e\",\r\n  //   badgeName: \"Supporter\",\r\n  //   badgeTip: \"Supported the developer.\",\r\n  // },\r\n];\r\n\r\nexport default badges;\r\n","const verifiedUsers = [\r\n  {\r\n    profileUrl:\r\n      \"https://data.ninjakiwi.com/btd6/users/9fbf128f8cc5fcf61c14894f5a25e5259a521fbf9743d96e\",\r\n    name: \"OatsFX\",\r\n  },\r\n  {\r\n    profileUrl:\r\n      \"https://data.ninjakiwi.com/btd6/users/9cb91089ddc5fea31f468c195e70b426cc0d1abe9d44da69\",\r\n    name: \"ISAB\",\r\n  },\r\n];\r\nexport default verifiedUsers;\r\n","import badges from \"configs/badges.config\";\r\nimport verifiedUsers from \"configs/verifiedUsers.config\";\r\nimport { LeaderboardEntry } from \"types/leaderboards\";\r\n\r\nconst Badges = ({ name, profileUrl }: { name: string; profileUrl: string }) => {\r\n  const matchedUser = verifiedUsers.find(\r\n    (x) => x.name.toLowerCase() === name.toLowerCase()\r\n  );\r\n\r\n  return (\r\n    <div className=\"flex gap-1\">\r\n      {badges.some((x) => x.profileUrl === profileUrl) ? (\r\n        badges\r\n          .filter((x) => x.profileUrl === profileUrl)\r\n          .map((badge) => (\r\n            <div\r\n              className=\"badge badge-neutral tooltip bg-opacity-50 badge-sm -mt-[0.3rem] pb-0.5 hover:text-accent\"\r\n              data-tip={badge.badgeTip}\r\n              key={badge.badgeName}\r\n            >\r\n              <p className=\"pointer-events-none\">{badge.badgeName}</p>\r\n            </div>\r\n          ))\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      {matchedUser ? (\r\n        <div\r\n          className=\"badge badge-neutral tooltip bg-opacity-50 badge-sm -mt-[0.3rem] pb-0.5 hover:text-accent\"\r\n          data-tip={`This is ${\r\n            matchedUser.profileUrl !== profileUrl ? \"not\" : \"\"\r\n          } the real ${matchedUser.name}.`}\r\n          key={\"verify\"}\r\n        >\r\n          <p className=\"pointer-events-none\">\r\n            {matchedUser.profileUrl !== profileUrl\r\n              ? \"Impersonation\"\r\n              : \"Verified\"}\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Badges;\r\n","import { useState } from \"react\";\r\nimport { GuildProfileData, PlayerProfileData } from \"types/leaderboards\";\r\n\r\nexport const useProfileData = (url: string) => {\r\n  const [data, setData] = useState<PlayerProfileData | GuildProfileData>(\r\n    {} as PlayerProfileData\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  const [fetched, setFetched] = useState(false);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch data\");\r\n      }\r\n      const jsonData = await response.json();\r\n      console.log(url);\r\n      if (jsonData.model.name === \"_btd6userprofile\") {\r\n        setData(jsonData.body as PlayerProfileData);\r\n      } else {\r\n        setData(jsonData.body as GuildProfileData);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n    setFetched(true);\r\n  };\r\n\r\n  return { data, loading, fetchData, fetched };\r\n};\r\n","import rankImage from \"images/misc/rank.webp\";\r\nimport vetRankImage from \"images/misc/rank_veteran.webp\";\r\nimport {\r\n  PlayerProfileData,\r\n  PlayerMedal,\r\n  PlayerEventMedals,\r\n  PlayerCtMedals,\r\n  GuildProfileData,\r\n} from \"types/leaderboards\";\r\nimport { formatToUpperCase } from \"util/converters\";\r\nimport {\r\n  bossEliteMedalImages,\r\n  bossNormalMedalImages,\r\n  ctPlayerMedalImages,\r\n  raceMedalImages,\r\n  raceMedalReward,\r\n} from \"util/formatters\";\r\nimport { Loading } from \"components/Loading\";\r\nimport { Badges } from \"components/Badges\";\r\nimport { useProfileData } from \"hooks/useProfileData\";\r\n\r\nconst ProfileModal = ({\r\n  profileUrl,\r\n  fetched,\r\n  profileData,\r\n  profileLoading,\r\n  isPlayer,\r\n}: {\r\n  profileUrl: string;\r\n  fetched: boolean;\r\n  profileData: PlayerProfileData | GuildProfileData;\r\n  profileLoading: boolean;\r\n  isPlayer: boolean;\r\n}) => {\r\n  const guildData = profileData as GuildProfileData;\r\n  const playerData = profileData as PlayerProfileData;\r\n\r\n  const {\r\n    data: ownerData,\r\n    loading: ownerLoading,\r\n    fetchData,\r\n    fetched: ownerFetched,\r\n  } = useProfileData(guildData.owner);\r\n\r\n  const displayMedals = () => {\r\n    if (isPlayer) {\r\n      return (\r\n        <div className=\"indicator items-center w-full px-12 py-4 gap-2 flex-wrap\">\r\n          {Object.keys(raceMedalImages)\r\n            .filter(\r\n              (medal) =>\r\n                playerData._medalsRace[\r\n                  formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                ]! > 0\r\n            )\r\n            .map((medal) => (\r\n              <div\r\n                className=\"flex flex-col items-center tooltip indicator hidden lg:block\"\r\n                data-tip={`${raceMedalReward[medal as PlayerMedal]}`}\r\n              >\r\n                <img\r\n                  src={raceMedalImages[medal as keyof typeof raceMedalImages]}\r\n                  className=\"h-[28px]\"\r\n                />\r\n                <div className=\"indicator-item indicator-bottom indicator-center badge badge-sm bg-opacity-90\">\r\n                  {playerData._medalsRace[\r\n                    formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                  ] ?? 0}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          {Object.keys(bossNormalMedalImages)\r\n            .filter(\r\n              (medal) =>\r\n                playerData._medalsBoss[\r\n                  formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                ]! > 0\r\n            )\r\n            .map((medal) => (\r\n              <div\r\n                className=\"flex flex-col items-center tooltip indicator hidden lg:block\"\r\n                data-tip={`${raceMedalReward[medal as PlayerMedal]}`}\r\n              >\r\n                <img\r\n                  src={\r\n                    bossNormalMedalImages[medal as keyof typeof raceMedalImages]\r\n                  }\r\n                  className=\"h-[28px]\"\r\n                />\r\n                <div className=\"indicator-item indicator-bottom indicator-center badge badge-sm bg-opacity-90\">\r\n                  {playerData._medalsBoss[\r\n                    formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                  ] ?? 0}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          {Object.keys(bossEliteMedalImages)\r\n            .filter(\r\n              (medal) =>\r\n                playerData._medalsBossElite[\r\n                  formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                ]! > 0\r\n            )\r\n            .map((medal) => (\r\n              <div\r\n                className=\"flex flex-col items-center tooltip indicator hidden lg:block\"\r\n                data-tip={`${raceMedalReward[medal as PlayerMedal]}`}\r\n              >\r\n                <img\r\n                  src={\r\n                    bossEliteMedalImages[medal as keyof typeof raceMedalImages]\r\n                  }\r\n                  className=\"h-[28px]\"\r\n                />\r\n                <div className=\"indicator-item indicator-bottom indicator-center badge badge-sm bg-opacity-90\">\r\n                  {playerData._medalsBossElite[\r\n                    formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                  ] ?? 0}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          {Object.keys(ctPlayerMedalImages)\r\n            .filter(\r\n              (medal) =>\r\n                playerData._medalsCTGlobal[\r\n                  formatToUpperCase(medal) as keyof PlayerCtMedals\r\n                ]! > 0\r\n            )\r\n            .map((medal) =>\r\n              playerData._medalsCTGlobal[\r\n                formatToUpperCase(medal) as keyof PlayerCtMedals\r\n              ]! > 0 ? (\r\n                <div\r\n                  className=\"flex flex-col items-center tooltip indicator hidden lg:block\"\r\n                  data-tip={`${raceMedalReward[medal as PlayerMedal]}`}\r\n                >\r\n                  <img\r\n                    src={\r\n                      ctPlayerMedalImages[\r\n                        medal as keyof typeof ctPlayerMedalImages\r\n                      ]\r\n                    }\r\n                    className=\"h-[28px]\"\r\n                  />\r\n                  <div className=\"indicator-item indicator-bottom indicator-center badge badge-sm bg-opacity-90\">\r\n                    {playerData._medalsCTGlobal[\r\n                      formatToUpperCase(medal) as keyof PlayerCtMedals\r\n                    ] ?? 0}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )\r\n            )}\r\n        </div>\r\n      );\r\n    } else {\r\n      // We are displaying a team's information. Now, I wish we could display players, but NK can't do that for us...\r\n      return <i className=\"text-xs\">Nothing to see here... Literally</i>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <dialog id={`${profileUrl}`} className=\"modal\">\r\n      <div\r\n        className=\"modal-box max-w-3xl bg-top bg-no-repeat bg-contain outline outline-1 outline-white/25\"\r\n        style={{\r\n          backgroundImage: `linear-gradient(to bottom, rgba(17, 17, 23, 0), rgba(17, 17, 23, 0.5)), url(${profileData.bannerURL})`,\r\n        }}\r\n      >\r\n        <div className=\"modal-action\">\r\n          <form method=\"dialog\">\r\n            {/* if there is a button in form, it will close the modal */}\r\n            <button className=\"btn bg-opacity-80 btn-circle btn-sm outline outline-1 absolute right-6 top-6 outline-error text-error\">\r\n              X\r\n            </button>\r\n          </form>\r\n        </div>\r\n        {fetched && !profileLoading ? (\r\n          <>\r\n            <div className=\"flex gap-4 items-end pt-8\">\r\n              <img\r\n                src={isPlayer ? playerData.avatarURL : guildData.frameURL}\r\n                className=\"w-[80px] h-[80px] rounded-xs\"\r\n              />\r\n              {!isPlayer ? (\r\n                <img\r\n                  src={guildData.iconURL}\r\n                  className=\"w-[80px] h-[80px] rounded-xs absolute\"\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <div className=\"flex flex-col\">\r\n                <div className=\"flex gap-2 items-center\">\r\n                  <p className=\"font-bold font-btd6 text-2xl drop-shadow-[0_1.2px_1.2px_rgba(0,0,0,0.8)]\">\r\n                    {isPlayer ? playerData.displayName : guildData.name}\r\n                  </p>\r\n                  <Badges\r\n                    name={isPlayer ? playerData.displayName : guildData.name}\r\n                    profileUrl={profileUrl}\r\n                  />\r\n                </div>\r\n                {isPlayer ? (\r\n                  <div className=\"flex gap-2\">\r\n                    <div className=\"flex gap-2 tooltip\" data-tip={\"Rank\"}>\r\n                      <img\r\n                        src={rankImage}\r\n                        className=\"h-[32px] drop-shadow-xl\"\r\n                      />\r\n                      <p className=\"absolute pt-1 font-black drop-shadow-[0_1.2px_1.2px_rgba(0,0,0,0.8)] text-center w-[32px] pointer-events-none\">\r\n                        {playerData.rank}\r\n                      </p>\r\n                    </div>\r\n                    {playerData.veteranRank !== 0 ? (\r\n                      <div\r\n                        className=\"flex gap-2 tooltip\"\r\n                        data-tip={\"Veteran Rank\"}\r\n                      >\r\n                        <img\r\n                          src={vetRankImage}\r\n                          className=\"h-[32px] drop-shadow-xl\"\r\n                        />\r\n                        <p className=\"absolute pt-1 font-black drop-shadow-[0_1.2px_1.2px_rgba(0,0,0,0.8)] text-center w-[32px] pointer-events-none\">\r\n                          {playerData.veteranRank}\r\n                        </p>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"flex gap-2\"></div>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"flex gap-2\">\r\n                    <img className=\"h-[32px] drop-shadow-xl\" />\r\n                    <p className=\"absolute pt-1 font-black drop-shadow-[0_1.2px_1.2px_rgba(0,0,0,0.8)] text-center w-[32px]\">\r\n                      {guildData.status}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {!isPlayer ? (\r\n              <div className=\"overflow-x-hidden w-full max-h-56 h-32 my-2 py-4 flex flex-col items-center bg-base-200 rounded-xl\">\r\n                <p className=\"font-semibold text-lg\">\r\n                  Players: {guildData.numMembers}\r\n                </p>\r\n                <ProfileModal\r\n                  profileUrl={guildData.owner}\r\n                  fetched={ownerFetched}\r\n                  profileData={ownerData}\r\n                  profileLoading={ownerLoading}\r\n                  isPlayer={true}\r\n                />\r\n                <button\r\n                  className=\"btn\"\r\n                  onClick={() => {\r\n                    (\r\n                      document.getElementById(\r\n                        `${guildData.owner}`\r\n                      ) as HTMLFormElement\r\n                    ).showModal();\r\n                    fetchData();\r\n                  }}\r\n                >\r\n                  View Owner\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <div className=\"overflow-x-hidden w-full max-h-56 h-56 my-2 py-4 flex flex-col items-center bg-base-200 rounded-xl\">\r\n              <p className=\"font-semibold text-lg\">Medals</p>\r\n\r\n              {displayMedals()}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex justify-center\">\r\n            <Loading />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <form method=\"dialog\" className=\"modal-backdrop\">\r\n        <button>close</button>\r\n      </form>\r\n    </dialog>\r\n  );\r\n};\r\n\r\nexport default ProfileModal;\r\n","import leastCashImage from \"images/misc/least_cash_s.webp\";\r\nimport leastTiersImage from \"images/misc/least_tiers_s.webp\";\r\nimport ctPointsImage from \"images/ct/ct_points_s.webp\";\r\nimport {\r\n  LeaderboardEntry,\r\n  PlayerMedal,\r\n  PlayerEventMedals,\r\n  PlayerCtMedals,\r\n  PlayerProfileData,\r\n  GuildProfileData,\r\n} from \"types/leaderboards\";\r\nimport {\r\n  appendOrdinalSuffix,\r\n  convertMsToTimeFormat,\r\n  formatToUpperCase,\r\n  placeToBossEliteMedal,\r\n  placeToBossNormalMedal,\r\n  placeToCtPlayerMedal,\r\n  placeToCtTeamMedal,\r\n  placeToRaceMedal,\r\n  timeAgo,\r\n} from \"util/converters\";\r\nimport {\r\n  bossEliteMedalImages,\r\n  bossNormalMedalImages,\r\n  ctPlayerMedalImages,\r\n  raceMedalImages,\r\n  raceMedalReward,\r\n} from \"util/formatters\";\r\nimport { BossMode, Event, EventType } from \"types/events\";\r\nimport { Badges } from \"components/Badges\";\r\nimport { ProfileModal } from \"components/ProfileModal\";\r\nimport { useProfileData } from \"hooks/useProfileData\";\r\n\r\nconst LeaderboardCard = ({\r\n  entry,\r\n  index,\r\n  event,\r\n  eventType,\r\n  delta,\r\n  showDelta,\r\n  bossMode,\r\n}: {\r\n  entry: LeaderboardEntry;\r\n  index: number;\r\n  event: Event;\r\n  eventType: EventType;\r\n  delta: number;\r\n  showDelta: boolean;\r\n  bossMode: BossMode;\r\n}) => {\r\n  const isPlayer = eventType !== \"CtTeam\";\r\n\r\n  const {\r\n    data: profileData,\r\n    loading: profileLoading,\r\n    fetchData,\r\n    fetched,\r\n  } = useProfileData(entry.profile);\r\n\r\n  const guildData = profileData as GuildProfileData;\r\n  const playerData = profileData as PlayerProfileData;\r\n\r\n  const handleMainScore = () => {\r\n    let scoreString = \"\";\r\n    let image = \"\";\r\n\r\n    switch (eventType) {\r\n      case \"Race\":\r\n        scoreString = convertMsToTimeFormat(entry.score);\r\n        break;\r\n      case \"Boss\":\r\n      case \"Boss2\":\r\n      case \"Boss3\":\r\n      case \"Boss4\":\r\n        switch (entry.scoreParts[0].name) {\r\n          case \"Game Time\":\r\n            scoreString = convertMsToTimeFormat(entry.score);\r\n            break;\r\n          case \"Cash Spent\":\r\n            image = leastCashImage;\r\n            scoreString = entry.score.toLocaleString();\r\n            break;\r\n          case \"Tiers\":\r\n            image = leastTiersImage;\r\n            scoreString = entry.score.toLocaleString();\r\n            break;\r\n          default:\r\n            scoreString = entry.score.toLocaleString();\r\n            break;\r\n        }\r\n        break;\r\n      case \"CtPlayer\":\r\n      case \"CtTeam\":\r\n        image = ctPointsImage;\r\n        scoreString = entry.score.toLocaleString();\r\n        break;\r\n    }\r\n    return (\r\n      <div className=\"text-right text-lg flex gap-1 justify-end items-center font-semibold text-nowrap -mt-1 \">\r\n        <img src={image} className=\"w-[18px]\" />\r\n        <span className=\"font-btd6 drop-shadow-[0_2px_0px_rgba(0,0,0,0.4)]\">\r\n          {scoreString}\r\n        </span>\r\n        {handleDelta()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleSecondaryScore = () => {\r\n    let scoreString = \"\";\r\n    let dataTip = \"\";\r\n    if (!entry.scoreParts) return;\r\n\r\n    switch (event.scoringType) {\r\n      case undefined:\r\n      case \"GameTime\":\r\n        scoreString = timeAgo(\r\n          event.start +\r\n            entry.scoreParts.filter(\r\n              (part) => part.name === \"Time after event start\"\r\n            )[0].score\r\n        );\r\n        dataTip = new Date(\r\n          event.start +\r\n            entry.scoreParts.filter(\r\n              (part) => part.name === \"Time after event start\"\r\n            )[0].score\r\n        ).toLocaleString();\r\n        break;\r\n      default:\r\n        scoreString = convertMsToTimeFormat(\r\n          entry.scoreParts.filter((part) => part.name === \"Game Time\")[0].score\r\n        );\r\n        dataTip = \"Game Time\";\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <span\r\n        className=\"text-right text-sm tooltip font-normal text-nowrap -mt-1 drop-shadow-[0_1px_0px_rgba(0,0,0,0.3)]\"\r\n        data-tip={dataTip}\r\n      >\r\n        {scoreString}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const handleDelta = () => {\r\n    if (!showDelta) {\r\n      return <></>;\r\n    }\r\n    let scoreString = \"\";\r\n    let isLowerBad = false;\r\n\r\n    switch (eventType) {\r\n      case \"Race\":\r\n        scoreString = convertMsToTimeFormat(delta);\r\n        break;\r\n      case \"Boss\":\r\n      case \"Boss2\":\r\n      case \"Boss3\":\r\n      case \"Boss4\":\r\n        switch (event.scoringType) {\r\n          case \"GameTime\":\r\n            scoreString = convertMsToTimeFormat(delta);\r\n            break;\r\n          case \"LeastCash\":\r\n            scoreString = delta.toLocaleString();\r\n            break;\r\n          case \"LeastTiers\":\r\n            scoreString = delta.toLocaleString();\r\n            break;\r\n          default:\r\n            scoreString = delta.toLocaleString();\r\n            break;\r\n        }\r\n        break;\r\n      case \"CtPlayer\":\r\n      case \"CtTeam\":\r\n        isLowerBad = true;\r\n        scoreString =\r\n          delta !== 0 ? (delta * -1).toLocaleString() : delta.toLocaleString();\r\n        break;\r\n    }\r\n    return (\r\n      <p\r\n        className={\r\n          \"font-semibold text-sm drop-shadow-[0_1px_0px_rgba(0,0,0,0.4)]\" +\r\n          ((isLowerBad ? delta >= 0 : delta <= 0)\r\n            ? \" text-success\"\r\n            : \" text-error\")\r\n        }\r\n      >\r\n        {delta <= 0 ? \"-\" : \"+\"}\r\n        {scoreString}\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const handleMedal = () => {\r\n    let medal = \"\";\r\n    switch (eventType) {\r\n      case \"Race\":\r\n        medal = placeToRaceMedal(index + 1, event.totalScores as number);\r\n        break;\r\n      case \"Boss\":\r\n      case \"Boss2\":\r\n      case \"Boss3\":\r\n      case \"Boss4\":\r\n        if (bossMode === \"Standard\") {\r\n          medal = placeToBossNormalMedal(\r\n            index + 1,\r\n            event.totalScores_standard as number\r\n          );\r\n        } else {\r\n          medal = placeToBossEliteMedal(\r\n            index + 1,\r\n            event.totalScores_standard as number\r\n          );\r\n        }\r\n        break;\r\n      case \"CtTeam\":\r\n        medal = placeToCtTeamMedal(index + 1, event.totalScores_team as number);\r\n        break;\r\n      case \"CtPlayer\":\r\n        medal = placeToCtPlayerMedal(\r\n          index + 1,\r\n          event.totalScores_player as number\r\n        );\r\n        break;\r\n    }\r\n    return <img src={medal} className=\"w-[34px]\" />;\r\n  };\r\n\r\n  const handleDisplayMedals = () => {\r\n    switch (eventType) {\r\n      case \"Race\":\r\n        return fetched ? (\r\n          <div className=\"flex h-full gap-3 items-center\">\r\n            {Object.keys(raceMedalImages)\r\n              .filter(\r\n                (medal) =>\r\n                  playerData._medalsRace[\r\n                    formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                  ]! > 0\r\n              )\r\n              .slice(0, 5)\r\n              .map((medal) =>\r\n                playerData._medalsRace[\r\n                  formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                ]! > 0 ? (\r\n                  <div\r\n                    className=\"flex flex-col items-center tooltip indicator hidden lg:block\"\r\n                    data-tip={`${raceMedalReward[medal as PlayerMedal]}`}\r\n                  >\r\n                    <img\r\n                      src={\r\n                        raceMedalImages[medal as keyof typeof raceMedalImages]\r\n                      }\r\n                      className=\"h-[28px]\"\r\n                    />\r\n                    <div className=\"indicator-item indicator-bottom indicator-center badge bg-opacity-90\">\r\n                      {playerData._medalsRace[\r\n                        formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                      ] ?? 0}\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <></>\r\n                )\r\n              )}\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex h-full gap-3 items-center\">\r\n            {/* <p className=\"text-xs\">If I had medals, they'd be here</p> */}\r\n          </div>\r\n        );\r\n      case \"Boss\":\r\n      case \"Boss2\":\r\n      case \"Boss3\":\r\n      case \"Boss4\":\r\n        if (bossMode === \"Standard\") {\r\n          return fetched ? (\r\n            <div className=\"flex h-full gap-3 items-center\">\r\n              {Object.keys(bossNormalMedalImages)\r\n                .filter(\r\n                  (medal) =>\r\n                    playerData._medalsBoss[\r\n                      formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                    ]! > 0\r\n                )\r\n                .slice(0, 5)\r\n                .map((medal) =>\r\n                  playerData._medalsBoss[\r\n                    formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                  ]! > 0 ? (\r\n                    <div\r\n                      className=\"flex flex-col items-center tooltip indicator hidden lg:block\"\r\n                      data-tip={`${raceMedalReward[medal as PlayerMedal]}`}\r\n                    >\r\n                      <img\r\n                        src={\r\n                          bossNormalMedalImages[\r\n                            medal as keyof typeof bossNormalMedalImages\r\n                          ]\r\n                        }\r\n                        className=\"h-[28px]\"\r\n                      />\r\n                      <div className=\"indicator-item indicator-bottom indicator-center badge bg-opacity-90\">\r\n                        {playerData._medalsBoss[\r\n                          formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                        ] ?? 0}\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex h-full gap-3 items-center\">\r\n              {/* <p className=\"text-xs\">If I had medals, they'd be here</p> */}\r\n            </div>\r\n          );\r\n        } else {\r\n          return fetched ? (\r\n            <div className=\"flex h-full gap-3 items-center\">\r\n              {Object.keys(bossEliteMedalImages)\r\n                .filter(\r\n                  (medal) =>\r\n                    playerData._medalsBossElite[\r\n                      formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                    ]! > 0\r\n                )\r\n                .slice(0, 5)\r\n                .map((medal) =>\r\n                  playerData._medalsBossElite[\r\n                    formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                  ]! > 0 ? (\r\n                    <div\r\n                      className=\"flex flex-col items-center tooltip indicator hidden lg:block\"\r\n                      data-tip={`${raceMedalReward[medal as PlayerMedal]}`}\r\n                    >\r\n                      <img\r\n                        src={\r\n                          bossEliteMedalImages[\r\n                            medal as keyof typeof bossEliteMedalImages\r\n                          ]\r\n                        }\r\n                        className=\"h-[28px]\"\r\n                      />\r\n                      <div className=\"indicator-item indicator-bottom indicator-center badge bg-opacity-90\">\r\n                        {playerData._medalsBossElite[\r\n                          formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                        ] ?? 0}\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex h-full gap-3 items-center\">\r\n              {/* <p className=\"text-xs\">If I had medals, they'd be here</p> */}\r\n            </div>\r\n          );\r\n        }\r\n      case \"CtTeam\":\r\n        return (\r\n          <div className=\"flex h-full gap-3 items-center\">\r\n            {/* <p className=\"text-xs\">If I had medals, they'd be here</p> */}\r\n          </div>\r\n        );\r\n      case \"CtPlayer\":\r\n        return fetched ? (\r\n          <div className=\"flex h-full gap-3 items-center\">\r\n            {Object.keys(ctPlayerMedalImages)\r\n              .filter(\r\n                (medal) =>\r\n                  playerData._medalsCTGlobal[\r\n                    formatToUpperCase(medal) as keyof PlayerCtMedals\r\n                  ]! > 0\r\n              )\r\n              .slice(0, 5)\r\n              .map((medal) =>\r\n                playerData._medalsCTGlobal[\r\n                  formatToUpperCase(medal) as keyof PlayerCtMedals\r\n                ]! > 0 ? (\r\n                  <div\r\n                    className=\"flex flex-col items-center tooltip indicator hidden lg:block\"\r\n                    data-tip={`${raceMedalReward[medal as PlayerMedal]}`}\r\n                  >\r\n                    <img\r\n                      src={\r\n                        ctPlayerMedalImages[\r\n                          medal as keyof typeof ctPlayerMedalImages\r\n                        ]\r\n                      }\r\n                      className=\"h-[28px]\"\r\n                    />\r\n                    <div className=\"indicator-item indicator-bottom indicator-center badge bg-opacity-90\">\r\n                      {playerData._medalsCTGlobal[\r\n                        formatToUpperCase(medal) as keyof PlayerCtMedals\r\n                      ] ?? 0}\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <></>\r\n                )\r\n              )}\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex h-full gap-3 items-center\">\r\n            {/* <p className=\"text-xs\">If I had medals, they'd be here</p> */}\r\n          </div>\r\n        );\r\n      default:\r\n        return (\r\n          <div className=\"flex h-full gap-3 items-center\">\r\n            {/* <p className=\"text-xs\">If I had medals, they'd be here</p> */}\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-1 w-5/6 items-end\">\r\n      <ProfileModal\r\n        profileUrl={entry.profile}\r\n        fetched={fetched}\r\n        profileData={profileData}\r\n        profileLoading={profileLoading}\r\n        isPlayer={isPlayer}\r\n      />\r\n      <div\r\n        key={entry.profile}\r\n        className=\"indicator w-full flex outline outline-2 outline-white/30 hover:cursor-pointer justify-between px-5 py-1 bg-center bg-cover\"\r\n        style={{\r\n          backgroundImage: fetched\r\n            ? `linear-gradient(to bottom, rgba(17, 17, 23, 0.2), rgba(17, 17, 23, 0.6)), url(${profileData.bannerURL})`\r\n            : \"linear-gradient(to bottom, rgba(17, 17, 23, 0.2), rgba(17, 17, 23, 0.6)), url(https://static-api.nkstatic.com/appdocs/4/assets/opendata/bbd8e1412f656b91db7df7aabbc1598b_TeamsBannerDeafult.png)\",\r\n        }}\r\n        onClick={() => {\r\n          (\r\n            document.getElementById(`${entry.profile}`) as HTMLFormElement\r\n          ).showModal();\r\n          fetchData();\r\n        }}\r\n      >\r\n        <div className=\"flex justify-start w-1/2\">\r\n          <div className=\"flex items-center gap-2 w-20\">\r\n            {handleMedal()}\r\n            <p className=\"font-medium\">{appendOrdinalSuffix(index + 1)}</p>\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-2 w-1/4\">\r\n            <img\r\n              src={\r\n                fetched\r\n                  ? isPlayer\r\n                    ? playerData.avatarURL\r\n                    : guildData.frameURL\r\n                  : isPlayer\r\n                  ? \"https://static-api.nkstatic.com/appdocs/4/assets/opendata/db32af61df5646951a18c60fe0013a31_ProfileAvatar01.png\"\r\n                  : \"https://static-api.nkstatic.com/appdocs/4/assets/opendata/4570fe44e0c89a609dd4853af7751bdb_TeamFrame1.png\"\r\n              }\r\n              className=\"w-[38px]\"\r\n            />\r\n            {!isPlayer ? (\r\n              <img src={guildData.iconURL} className=\"w-[38px] absolute\" />\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            <div className=\"flex flex-col flex-nowrap\">\r\n              <p className=\"[text-shadow:_0_2px_0_rgb(0_0_0)] font-semibold tracking-wider font-btd6 text-lg text-nowrap\">\r\n                {entry.displayName}\r\n              </p>\r\n              <Badges name={entry.displayName} profileUrl={entry.profile} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex justify-between w-1/2 gap-[1.2rem]\">\r\n          {handleDisplayMedals()}\r\n\r\n          <div className=\"flex flex-col h-full w-1/4 justify-center items-end\">\r\n            {handleMainScore()}\r\n            {handleSecondaryScore()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {entry.otherPlayers?.map((player) => (\r\n        <div\r\n          key={player.profile}\r\n          className=\"indicator w-full flex outline outline-1 outline-white/30 hover:cursor-pointer justify-between px-6 py-1 bg-center bg-cover\"\r\n          style={{\r\n            backgroundImage: fetched\r\n              ? `linear-gradient(to bottom, rgba(17, 17, 23, 0.4), rgba(17, 17, 23, 1)), url(${profileData.bannerURL})`\r\n              : \"linear-gradient(to bottom, rgba(17, 17, 23, 0.2), rgba(17, 17, 23, 0.6)), url(https://static-api.nkstatic.com/appdocs/4/assets/opendata/bbd8e1412f656b91db7df7aabbc1598b_TeamsBannerDeafult.png)\",\r\n          }}\r\n          onClick={() => {\r\n            console.log(`clicked ${player.profile}`);\r\n          }}\r\n        >\r\n          <div className=\"flex justify-start w-1/2\">\r\n            <div className=\"flex items-center gap-2 w-20\"></div>\r\n\r\n            <div className=\"flex items-center gap-2 w-1/4\">\r\n              <img\r\n                src={\r\n                  fetched\r\n                    ? playerData.avatarURL\r\n                    : \"https://static-api.nkstatic.com/appdocs/4/assets/opendata/db32af61df5646951a18c60fe0013a31_ProfileAvatar01.png\"\r\n                }\r\n                className=\"w-[38px]\"\r\n              />\r\n\r\n              <div className=\"flex flex-col flex-nowrap\">\r\n                <p className=\"font-semibold text-lg text-nowrap\">\r\n                  {player.displayName}\r\n                </p>\r\n                <Badges name={player.displayName} profileUrl={player.profile} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-start w-1/2 gap-[1.2rem]\">\r\n            {fetched ? (\r\n              <div className=\"flex gap-3 items-center\">\r\n                {Object.keys(raceMedalImages)\r\n                  .filter(\r\n                    (medal) =>\r\n                      playerData._medalsRace[\r\n                        formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                      ]! > 0\r\n                  )\r\n                  .slice(0, 5)\r\n                  .map((medal) =>\r\n                    playerData._medalsRace[\r\n                      formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                    ]! > 0 ? (\r\n                      <div\r\n                        className=\"flex flex-col items-center tooltip indicator hidden lg:block\"\r\n                        data-tip={`${raceMedalReward[medal as PlayerMedal]}`}\r\n                      >\r\n                        <img\r\n                          src={\r\n                            raceMedalImages[\r\n                              medal as keyof typeof raceMedalImages\r\n                            ]\r\n                          }\r\n                          className=\"h-[28px]\"\r\n                        />\r\n                        <div className=\"indicator-item indicator-bottom indicator-center badge bg-opacity-90\">\r\n                          {playerData._medalsRace[\r\n                            formatToUpperCase(medal) as keyof PlayerEventMedals\r\n                          ] ?? 0}\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )\r\n                  )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"flex h-full gap-3 items-center\">\r\n                {/* <p className=\"text-xs\">If I had medals, they'd be here</p> */}\r\n              </div>\r\n            )}\r\n            <div className=\"flex flex-col h-full w-16 justify-center items-end\"></div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaderboardCard;\r\n","import { EventType } from \"types/events\";\r\n\r\nconst SelectionRow = ({\r\n  selectionName,\r\n  selectionId,\r\n  selections,\r\n}: {\r\n  selectionName: string;\r\n  selectionId: string;\r\n  selections: { ids: string[]; name: string; onClickFunction: () => void }[];\r\n}) => {\r\n  return (\r\n    <div className=\"flex gap-2\">\r\n      {selections.map((selection) => (\r\n        <a\r\n          className={\r\n            \"py-2 px-2 transition ease-in-out border-b bg-black hover:bg-opacity-70 hover:cursor-pointer hover:text-accent hover:border-b-2\" +\r\n            (selection.ids.includes(selectionId)\r\n              ? \" bg-black bg-opacity-30 text-primary border-b-2\"\r\n              : \" bg-opacity-0\")\r\n          }\r\n          onClick={() => {\r\n            selection.onClickFunction();\r\n          }}\r\n          key={selection.name}\r\n        >\r\n          {selection.name}\r\n        </a>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectionRow;\r\n","import { LeaderboardCard } from \"components/LeaderboardCard\";\r\nimport { Loading } from \"components/Loading\";\r\nimport { SelectionRow } from \"components/SelectionRow\";\r\nimport ctIds from \"configs/ctIds.config\";\r\nimport { useLeaderboard } from \"hooks/useLeaderboard\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { BossMode, EventType } from \"types/events\";\r\nimport { Alert } from \"types/util\";\r\nimport { appendOrdinalSuffix, prettyEventNames } from \"util/converters\";\r\n\r\nconst Leaderboard: React.FC = () => {\r\n  const [alert, setAlert] = useState<Alert>({\r\n    alertType: \"alert\",\r\n    message: \"\",\r\n  });\r\n\r\n  const [leaderboardType, setLeaderboardType] = useState<EventType>(\"Race\");\r\n  const [eventPos, setEventPos] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [bossMode, setBossMode] = useState<BossMode>(\"Standard\");\r\n  const [firstPlaceScore, setFirstPlaceScore] = useState<number>(-1);\r\n  const [showDelta, setShowDelta] = useState(false);\r\n\r\n  const {\r\n    data: leaderboardData,\r\n    events: eventData,\r\n    loading,\r\n    error,\r\n  } = useLeaderboard(leaderboardType, eventPos, page, bossMode);\r\n\r\n  const handlePageInput = (e: any) => {\r\n    const re = /^[0-9\\b]*$/;\r\n\r\n    // if value is not blank, then test the regex\r\n    const value: string = e.target.value;\r\n\r\n    if (value === \"\" || re.test(value)) {\r\n      const numVal = Number(value) < 1 ? 1 : Number(value);\r\n      setPage(numVal);\r\n    }\r\n  };\r\n\r\n  const getTotalScores = (): number => {\r\n    switch (leaderboardType) {\r\n      case \"Boss\":\r\n        if (bossMode === \"Standard\") {\r\n          return eventData[eventPos].totalScores_standard !== undefined\r\n            ? (eventData[eventPos].totalScores_standard as number)\r\n            : 0;\r\n        } else {\r\n          return eventData[eventPos].totalScores_elite !== undefined\r\n            ? (eventData[eventPos].totalScores_elite as number)\r\n            : 0;\r\n        }\r\n      case \"CtPlayer\":\r\n        return eventData[eventPos].totalScores_player !== undefined\r\n          ? (eventData[eventPos].totalScores_player as number)\r\n          : 0;\r\n      case \"CtTeam\":\r\n        return eventData[eventPos].totalScores_team !== undefined\r\n          ? (eventData[eventPos].totalScores_team as number)\r\n          : 0;\r\n      default:\r\n        return eventData[eventPos].totalScores !== undefined\r\n          ? (eventData[eventPos].totalScores as number)\r\n          : 0;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!loading && !error && page === 1) {\r\n      setFirstPlaceScore(leaderboardData.body[0].score);\r\n    }\r\n  }, [loading]);\r\n\r\n  return (\r\n    <div className=\"flex w-full flex-col items-center gap-4\">\r\n      <p className=\"font-bold text-2xl py-2 font-display tracking-tighter text-accent\">\r\n        {prettyEventNames[leaderboardType]} Leaderboard\r\n      </p>\r\n\r\n      <div className=\"flex gap-4 w-full items-center justify-center\">\r\n        <div className=\"flex flex-col w-full gap-2 items-center\">\r\n          <SelectionRow\r\n            selectionId={leaderboardType}\r\n            selectionName={leaderboardType}\r\n            selections={[\r\n              {\r\n                ids: [\"Race\"],\r\n                name: \"Race\",\r\n                onClickFunction: () => {\r\n                  setLeaderboardType(\"Race\");\r\n                  setEventPos(0);\r\n                  setAlert({\r\n                    alertType: \"alert\",\r\n                    message: \"\",\r\n                  });\r\n                  setPage(1);\r\n                },\r\n              },\r\n              {\r\n                ids: [\"Boss\", \"Boss2\", \"Boss3\", \"Boss4\"],\r\n                name: \"Boss\",\r\n                onClickFunction: () => {\r\n                  setLeaderboardType(\"Boss\");\r\n                  setEventPos(0);\r\n                  setAlert({\r\n                    alertType: \"alert\",\r\n                    message: \"\",\r\n                  });\r\n                  setPage(1);\r\n                },\r\n              },\r\n              {\r\n                ids: [\"CtTeam\", \"CtPlayer\"],\r\n                name: \"Contested Territory\",\r\n                onClickFunction: () => {\r\n                  setLeaderboardType(\"CtTeam\");\r\n                  setEventPos(0);\r\n                  setAlert({\r\n                    alertType: \"alert\",\r\n                    message: \"\",\r\n                  });\r\n                  setPage(1);\r\n                },\r\n              },\r\n            ]}\r\n          />\r\n\r\n          {leaderboardType === \"CtTeam\" || leaderboardType === \"CtPlayer\" ? (\r\n            <SelectionRow\r\n              selectionId={leaderboardType}\r\n              selectionName={leaderboardType}\r\n              selections={[\r\n                {\r\n                  ids: [\"CtTeam\"],\r\n                  name: \"Team\",\r\n                  onClickFunction: () => {\r\n                    setLeaderboardType(\"CtTeam\");\r\n                    setPage(1);\r\n                  },\r\n                },\r\n                {\r\n                  ids: [\"CtPlayer\"],\r\n                  name: \"Player\",\r\n                  onClickFunction: () => {\r\n                    setLeaderboardType(\"CtPlayer\");\r\n                    setPage(1);\r\n                  },\r\n                },\r\n              ]}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          {leaderboardType === \"Boss\" ||\r\n          leaderboardType === \"Boss2\" ||\r\n          leaderboardType === \"Boss3\" ||\r\n          leaderboardType === \"Boss4\" ? (\r\n            <>\r\n              <SelectionRow\r\n                selectionId={bossMode}\r\n                selectionName={bossMode}\r\n                selections={[\r\n                  {\r\n                    ids: [\"Standard\"],\r\n                    name: \"Standard\",\r\n                    onClickFunction: () => {\r\n                      setBossMode(\"Standard\");\r\n                      setPage(1);\r\n                    },\r\n                  },\r\n                  {\r\n                    ids: [\"Elite\"],\r\n                    name: \"Elite\",\r\n                    onClickFunction: () => {\r\n                      setBossMode(\"Elite\");\r\n                      setPage(1);\r\n                    },\r\n                  },\r\n                ]}\r\n              />\r\n              <SelectionRow\r\n                selectionId={leaderboardType}\r\n                selectionName={leaderboardType}\r\n                selections={[\r\n                  {\r\n                    ids: [\"Boss\"],\r\n                    name: \"Solo\",\r\n                    onClickFunction: () => {\r\n                      setLeaderboardType(\"Boss\");\r\n                      setAlert({\r\n                        alertType: \"alert\",\r\n                        message: \"\",\r\n                      });\r\n                      setPage(1);\r\n                    },\r\n                  },\r\n                  {\r\n                    ids: [\"Boss2\"],\r\n                    name: \"Duo\",\r\n                    onClickFunction: () => {\r\n                      setLeaderboardType(\"Boss2\");\r\n                      setAlert({\r\n                        alertType: \"alert-warning\",\r\n                        message:\r\n                          \"Co-op leaderboards aren't offically supported by NinjaKiwi. Some values will be wrong, I can't fix that.\",\r\n                      });\r\n                      setPage(1);\r\n                    },\r\n                  },\r\n                  {\r\n                    ids: [\"Boss3\"],\r\n                    name: \"Trio\",\r\n                    onClickFunction: () => {\r\n                      setLeaderboardType(\"Boss3\");\r\n                      setAlert({\r\n                        alertType: \"alert-warning\",\r\n                        message:\r\n                          \"Co-op leaderboards aren't offically supported by NinjaKiwi. Some values will be wrong, I can't fix that.\",\r\n                      });\r\n                      setPage(1);\r\n                    },\r\n                  },\r\n                  {\r\n                    ids: [\"Boss4\"],\r\n                    name: \"Quad\",\r\n                    onClickFunction: () => {\r\n                      setLeaderboardType(\"Boss4\");\r\n                      setAlert({\r\n                        alertType: \"alert-warning\",\r\n                        message:\r\n                          \"Co-op leaderboards aren't offically supported yet. Some values will be wrong, I can't fix that.\",\r\n                      });\r\n                      setPage(1);\r\n                    },\r\n                  },\r\n                ]}\r\n              />\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"divider divider-horizontal\" />\r\n        <div className=\"flex items-center w-full gap-4\">\r\n          <p className=\"text-nowrap\">\r\n            Select a {prettyEventNames[leaderboardType]} event:\r\n          </p>\r\n          {!loading ? (\r\n            <select\r\n              id=\"tile-select\"\r\n              className=\"select select-bordered w-full max-w-xs\"\r\n              onChange={(e) => {\r\n                console.log(e.target.options.selectedIndex);\r\n                setEventPos(e.target.options.selectedIndex);\r\n              }}\r\n              value={\r\n                eventData[eventPos].name\r\n                  ? eventData[eventPos].name\r\n                  : leaderboardType === \"CtPlayer\" ||\r\n                    leaderboardType === \"CtTeam\"\r\n                  ? `${\r\n                      ctIds.filter((x) => x.id === eventData[eventPos].id)[0]\r\n                        .number\r\n                    } (${\r\n                      ctIds.filter((x) => x.id === eventData[eventPos].id)[0].id\r\n                    })`\r\n                  : eventData[eventPos].id\r\n              }\r\n            >\r\n              {eventData.map((x, index) => (\r\n                <option key={index}>\r\n                  {x.name\r\n                    ? x.name\r\n                    : leaderboardType === \"CtPlayer\" ||\r\n                      leaderboardType === \"CtTeam\"\r\n                    ? `${ctIds.filter((a) => a.id === x.id)[0].number} (${\r\n                        ctIds.filter((a) => a.id === x.id)[0].id\r\n                      })`\r\n                    : eventData[eventPos].id}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          ) : (\r\n            <div className=\"skeleton h-12 w-full max-w-xs\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {!error ? (\r\n        <>\r\n          <div className=\"join\">\r\n            <button\r\n              className={\r\n                \"join-item btn\" + (!leaderboardData.prev ? \" btn-disabled\" : \"\")\r\n              }\r\n              onClick={() => setPage(1)}\r\n            >\r\n              «\r\n            </button>\r\n            <button\r\n              className={\r\n                \"join-item btn\" + (!leaderboardData.prev ? \" btn-disabled\" : \"\")\r\n              }\r\n              onClick={() => setPage((prev) => prev - 1)}\r\n            >\r\n              ‹\r\n            </button>\r\n            <label className=\"input join-item bg-base-200 hover:bg-base-300 flex items-center gap-2 z-50\">\r\n              {/* <img src={leastCashImage} className=\"w-[28px]\" /> */}\r\n              <input\r\n                className=\"font-medium text-lg max-w-40 text-center\"\r\n                type=\"text\"\r\n                inputMode=\"numeric\"\r\n                placeholder=\"Score\"\r\n                value={page}\r\n                onChange={handlePageInput}\r\n              />\r\n            </label>\r\n            <button\r\n              className={\r\n                \"join-item btn\" + (!leaderboardData.next ? \" btn-disabled\" : \"\")\r\n              }\r\n              onClick={() => setPage((prev) => prev + 1)}\r\n            >\r\n              ›\r\n            </button>\r\n            <button\r\n              className={\r\n                \"join-item btn btn-disabled tooltip\" +\r\n                (!leaderboardData.next ? \" btn-disabled\" : \"\")\r\n              }\r\n              onClick={() => setPage(25)}\r\n              data-tip=\"I don't know the max pages for this event.\"\r\n            >\r\n              »\r\n            </button>\r\n          </div>\r\n          <label className=\"flex gap-4 cursor-pointer items-center\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showDelta}\r\n              className=\"checkbox\"\r\n              onChange={() => setShowDelta((prev) => !prev)}\r\n            />\r\n            <span className=\"label-text\">Show Delta</span>\r\n          </label>\r\n          {!loading ? (\r\n            <p>\r\n              Showing players{\" \"}\r\n              {appendOrdinalSuffix(\r\n                (page - 1) * leaderboardData.body.length + 1\r\n              )}\r\n              -{appendOrdinalSuffix(page * leaderboardData.body.length)} of{\" \"}\r\n              {getTotalScores().toLocaleString()} entries.\r\n            </p>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      {alert.message.length > 0 ? (\r\n        <div role=\"alert\" className={\"alert w-2/3 \" + alert.alertType}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"stroke-current shrink-0 h-6 w-6\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n            />\r\n          </svg>\r\n          <span>{alert.message}</span>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      {error ? (\r\n        <p>Failed to grab data.</p>\r\n      ) : (\r\n        <>\r\n          {!loading ? (\r\n            leaderboardData.body.map((entry, index) => (\r\n              <LeaderboardCard\r\n                entry={entry}\r\n                index={index + (page - 1) * leaderboardData.body.length}\r\n                event={eventData[eventPos]}\r\n                eventType={leaderboardType}\r\n                delta={entry.score - firstPlaceScore}\r\n                showDelta={showDelta}\r\n                key={index}\r\n                bossMode={bossMode}\r\n              />\r\n            ))\r\n          ) : (\r\n            <Loading />\r\n          )}\r\n        </>\r\n      )}\r\n      {!error && !loading ? (\r\n        <>\r\n          <div className=\"join\">\r\n            <button\r\n              className={\r\n                \"join-item btn\" + (!leaderboardData.prev ? \" btn-disabled\" : \"\")\r\n              }\r\n              onClick={() => setPage(1)}\r\n            >\r\n              «\r\n            </button>\r\n            <button\r\n              className={\r\n                \"join-item btn\" + (!leaderboardData.prev ? \" btn-disabled\" : \"\")\r\n              }\r\n              onClick={() => setPage((prev) => prev - 1)}\r\n            >\r\n              ‹\r\n            </button>\r\n            <label className=\"input join-item bg-base-200 hover:bg-base-300 flex items-center gap-2 z-50\">\r\n              {/* <img src={leastCashImage} className=\"w-[28px]\" /> */}\r\n              <input\r\n                className=\"font-medium text-lg max-w-40 text-center\"\r\n                type=\"text\"\r\n                inputMode=\"numeric\"\r\n                placeholder=\"Score\"\r\n                value={page}\r\n                onChange={handlePageInput}\r\n              />\r\n            </label>\r\n            <button\r\n              className={\r\n                \"join-item btn\" + (!leaderboardData.next ? \" btn-disabled\" : \"\")\r\n              }\r\n              onClick={() => setPage((prev) => prev + 1)}\r\n            >\r\n              ›\r\n            </button>\r\n            <button\r\n              className={\r\n                \"join-item btn btn-disabled tooltip\" +\r\n                (!leaderboardData.next ? \" btn-disabled\" : \"\")\r\n              }\r\n              onClick={() => setPage(25)}\r\n              data-tip=\"I don't know the max pages for this event.\"\r\n            >\r\n              »\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;\r\n","import Leaderboard from \"./Leaderboard\";\r\nexport default Leaderboard;\r\n","import { Relic, Tower } from \"types/ct\";\r\nimport {\r\n  bossEliteMedalImages,\r\n  bossNormalMedalImages,\r\n  ctPlayerMedalImages,\r\n  ctTeamLocalMedalImages,\r\n  ctTeamMedalImages,\r\n  raceMedalImages,\r\n} from \"./formatters\";\r\nimport { EventType } from \"types/events\";\r\nimport ctIds from \"configs/ctIds.config\";\r\n\r\nexport type TowerType = \"primary\" | \"military\" | \"magic\" | \"support\" | \"hero\";\r\n\r\nexport const roundEven5 = (num: number) => {\r\n  if (num % 5 === 2.5) {\r\n    return Math.floor(num / 5) * 5;\r\n  }\r\n  return Math.round(num / 5) * 5;\r\n};\r\n\r\nexport const convertMsToTimeFormat = (ms: number): string => {\r\n  // Calculate the hours, minutes, seconds, and milliseconds\r\n  const hours = Math.floor(ms / 3600000);\r\n  const minutes = Math.floor((ms % 3600000) / 60000);\r\n  const seconds = Math.floor((ms % 60000) / 1000);\r\n  const milliseconds = Math.floor((ms % 1000) / 10); // Extract two digits of milliseconds\r\n\r\n  // Format each part to ensure two digits\r\n  const formattedHours = hours > 0 ? hours.toString().padStart(2, \"0\") : \"\";\r\n  const formattedMinutes = minutes.toString().padStart(2, \"0\");\r\n  const formattedSeconds = seconds.toString().padStart(2, \"0\");\r\n  const formattedMilliseconds = milliseconds.toString().padStart(2, \"0\");\r\n\r\n  // Combine and return the formatted string\r\n  return formattedHours\r\n    ? `${formattedHours}:${formattedMinutes}:${formattedSeconds}.${formattedMilliseconds}`\r\n    : `${formattedMinutes}:${formattedSeconds}.${formattedMilliseconds}`;\r\n};\r\n\r\nexport const timeAgo = (timestamp: number): string => {\r\n  const now = Date.now();\r\n  const elapsed = now - timestamp;\r\n\r\n  const msPerSecond = 1000;\r\n  const msPerMinute = msPerSecond * 60;\r\n  const msPerHour = msPerMinute * 60;\r\n  const msPerDay = msPerHour * 24;\r\n\r\n  if (elapsed < msPerMinute) {\r\n    const seconds = Math.floor(elapsed / msPerSecond);\r\n    return `${seconds} second${seconds !== 1 ? \"s\" : \"\"} ago`;\r\n  } else if (elapsed < msPerHour) {\r\n    const minutes = Math.floor(elapsed / msPerMinute);\r\n    return `${minutes} minute${minutes !== 1 ? \"s\" : \"\"} ago`;\r\n  } else if (elapsed < msPerDay) {\r\n    const hours = Math.floor(elapsed / msPerHour);\r\n    return `${hours} hour${hours !== 1 ? \"s\" : \"\"} ago`;\r\n  } else {\r\n    const days = Math.floor(elapsed / msPerDay);\r\n    return `${days} day${days !== 1 ? \"s\" : \"\"} ago`;\r\n  }\r\n};\r\n\r\nexport const formatGameEntityName = (entity: string): string => {\r\n  const wordsToExclude = [\"or\", \"the\", \"a\", \"of\"];\r\n\r\n  return entity\r\n    .replace(/([a-z])([A-Z])/g, \"$1 $2\") // Add space before capitals\r\n    .replace(/\\b(Or|The|A|Of)\\b/g, (match) => match.toLowerCase()); // Lowercase specific words\r\n};\r\n\r\nexport const formatGoldenAppleDiscordEmote = (relic: Relic): string => {\r\n  return `:z_${relic}:`;\r\n};\r\n\r\nexport const formatToUpperCase = (entity: string): string => {\r\n  return entity\r\n    .split(\"_\")\r\n    .map((word) => {\r\n      return word.charAt(0).toUpperCase() + word.slice(1);\r\n    })\r\n    .join(\"\");\r\n};\r\n\r\nexport const placeToRaceMedal = (\r\n  place: number,\r\n  totalEntries: number\r\n): string => {\r\n  if (place < 1) {\r\n    return \"\";\r\n  }\r\n\r\n  const percentile = (place / totalEntries) * 100;\r\n\r\n  if (place === 1) {\r\n    return raceMedalImages.black_diamond;\r\n  } else if (place === 2) {\r\n    return raceMedalImages.red_diamond;\r\n  } else if (place === 3) {\r\n    return raceMedalImages.diamond;\r\n  } else if (place <= 50) {\r\n    return raceMedalImages.gold_diamond;\r\n  } else if (percentile <= 1) {\r\n    return raceMedalImages.double_gold;\r\n  } else if (percentile <= 10) {\r\n    return raceMedalImages.gold_silver;\r\n  } else if (percentile <= 25) {\r\n    return raceMedalImages.double_silver;\r\n  } else if (percentile <= 50) {\r\n    return raceMedalImages.silver;\r\n  } else if (percentile <= 75) {\r\n    return raceMedalImages.bronze;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const placeToBossNormalMedal = (\r\n  place: number,\r\n  totalEntries: number\r\n): string => {\r\n  if (place < 1) {\r\n    return \"\";\r\n  }\r\n\r\n  const percentile = (place / totalEntries) * 100;\r\n\r\n  if (place === 1) {\r\n    return bossNormalMedalImages.black_diamond;\r\n  } else if (place === 2) {\r\n    return bossNormalMedalImages.red_diamond;\r\n  } else if (place === 3) {\r\n    return bossNormalMedalImages.diamond;\r\n  } else if (place <= 50) {\r\n    return bossNormalMedalImages.gold_diamond;\r\n  } else if (percentile <= 1) {\r\n    return bossNormalMedalImages.double_gold;\r\n  } else if (percentile <= 10) {\r\n    return bossNormalMedalImages.gold_silver;\r\n  } else if (percentile <= 25) {\r\n    return bossNormalMedalImages.double_silver;\r\n  } else if (percentile <= 50) {\r\n    return bossNormalMedalImages.silver;\r\n  } else if (percentile <= 75) {\r\n    return bossNormalMedalImages.bronze;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const placeToBossEliteMedal = (\r\n  place: number,\r\n  totalEntries: number\r\n): string => {\r\n  if (place < 1) {\r\n    return \"\";\r\n  }\r\n\r\n  const percentile = (place / totalEntries) * 100;\r\n\r\n  if (place === 1) {\r\n    return bossEliteMedalImages.black_diamond;\r\n  } else if (place === 2) {\r\n    return bossEliteMedalImages.red_diamond;\r\n  } else if (place === 3) {\r\n    return bossEliteMedalImages.diamond;\r\n  } else if (place <= 50) {\r\n    return bossEliteMedalImages.gold_diamond;\r\n  } else if (percentile <= 1) {\r\n    return bossEliteMedalImages.double_gold;\r\n  } else if (percentile <= 10) {\r\n    return bossEliteMedalImages.gold_silver;\r\n  } else if (percentile <= 25) {\r\n    return bossEliteMedalImages.double_silver;\r\n  } else if (percentile <= 50) {\r\n    return bossEliteMedalImages.silver;\r\n  } else if (percentile <= 75) {\r\n    return bossEliteMedalImages.bronze;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const placeToCtPlayerMedal = (\r\n  place: number,\r\n  totalEntries: number\r\n): string => {\r\n  if (place < 1) {\r\n    return \"\";\r\n  }\r\n\r\n  const percentile = (place / totalEntries) * 100;\r\n\r\n  if (place <= 25) {\r\n    return ctPlayerMedalImages.diamond;\r\n  } else if (place <= 100) {\r\n    return ctPlayerMedalImages.gold_diamond;\r\n  } else if (percentile <= 1) {\r\n    return ctPlayerMedalImages.double_gold;\r\n  } else if (percentile <= 10) {\r\n    return ctPlayerMedalImages.gold_silver;\r\n  } else if (percentile <= 25) {\r\n    return ctPlayerMedalImages.double_silver;\r\n  } else if (percentile <= 50) {\r\n    return ctPlayerMedalImages.silver;\r\n  } else if (percentile <= 75) {\r\n    return ctPlayerMedalImages.bronze;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const placeToCtTeamMedal = (\r\n  place: number,\r\n  totalEntries: number\r\n): string => {\r\n  if (place < 1) {\r\n    return \"\";\r\n  }\r\n\r\n  const percentile = (place / totalEntries) * 100;\r\n\r\n  if (place === 1) {\r\n    return ctTeamMedalImages.black_diamond;\r\n  } else if (place === 2) {\r\n    return ctTeamMedalImages.red_diamond;\r\n  } else if (place === 3) {\r\n    return ctTeamMedalImages.diamond;\r\n  } else if (place <= 25) {\r\n    return ctTeamMedalImages.gold_diamond;\r\n  } else if (place <= 100) {\r\n    return ctTeamMedalImages.double_gold;\r\n  } else if (percentile <= 1) {\r\n    return ctTeamMedalImages.gold_silver;\r\n  } else if (percentile <= 10) {\r\n    return ctTeamMedalImages.double_silver;\r\n  } else if (percentile <= 25) {\r\n    return ctTeamMedalImages.silver;\r\n  } else if (percentile <= 75) {\r\n    return ctTeamMedalImages.bronze;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const placeToCtHistoryEmote = (\r\n  place: number,\r\n  totalEntries: number\r\n): string => {\r\n  const percentile = (place / totalEntries) * 100;\r\n\r\n  if (place === 1) {\r\n    return \":GT1:\";\r\n  } else if (place === 2) {\r\n    return \":GT2:\";\r\n  } else if (place === 3) {\r\n    return \":GT3:\";\r\n  } else if (place <= 25) {\r\n    return \":GT25\";\r\n  } else if (place <= 100) {\r\n    return \":GT100:\";\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const placeToCtTeamLocalMedal = (place: number) => {\r\n  switch (place) {\r\n    case 1:\r\n      return ctTeamLocalMedalImages.diamond;\r\n    case 2:\r\n      return ctTeamLocalMedalImages.double_gold;\r\n    case 3:\r\n      return ctTeamLocalMedalImages.silver;\r\n    case 4:\r\n      return ctTeamLocalMedalImages.bronze;\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport const appendOrdinalSuffix = (number: number): string => {\r\n  const j = number % 10;\r\n  const k = number % 100;\r\n  if (j === 1 && k !== 11) {\r\n    return number + \"st\";\r\n  }\r\n  if (j === 2 && k !== 12) {\r\n    return number + \"nd\";\r\n  }\r\n  if (j === 3 && k !== 13) {\r\n    return number + \"rd\";\r\n  }\r\n  return number + \"th\";\r\n};\r\n\r\nexport const convertGameTypeToString = (gameType: number): string => {\r\n  switch (gameType) {\r\n    case 2:\r\n      return \"Race\";\r\n    case 4:\r\n      return \"Boss\";\r\n    case 8:\r\n      return \"LeastCash\";\r\n    case 9:\r\n      return \"LeastTiers\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport const formatEpochToReadableDate = (epochMs: number): string => {\r\n  const date = new Date(epochMs);\r\n  return date.toLocaleDateString(\"en-US\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  });\r\n};\r\n\r\nexport const formatDateToEventHighlightDate = (epochMs: number): string => {\r\n  const date = new Date(epochMs);\r\n  const day = date.getUTCDate();\r\n  const month = date.toLocaleString(\"en-US\", {\r\n    month: \"long\",\r\n    timeZone: \"UTC\",\r\n  });\r\n  const year = date.getUTCFullYear();\r\n  return `${appendOrdinalSuffix(day)} ${month} ${year}`;\r\n};\r\n\r\nexport const towerTypes: { [key in Tower]: TowerType } = {\r\n  Alchemist: \"magic\",\r\n  BananaFarm: \"support\",\r\n  BeastHandler: \"support\",\r\n  BoomerangMonkey: \"primary\",\r\n  BombShooter: \"primary\",\r\n  DartMonkey: \"primary\",\r\n  DartlingGunner: \"military\",\r\n  Druid: \"magic\",\r\n  EngineerMonkey: \"support\",\r\n  GlueGunner: \"primary\",\r\n  HeliPilot: \"military\",\r\n  IceMonkey: \"primary\",\r\n  Mermonkey: \"magic\",\r\n  MonkeyAce: \"military\",\r\n  MonkeyBuccaneer: \"military\",\r\n  MonkeySub: \"military\",\r\n  MonkeyVillage: \"support\",\r\n  MortarMonkey: \"military\",\r\n  NinjaMonkey: \"magic\",\r\n  SniperMonkey: \"military\",\r\n  SpikeFactory: \"support\",\r\n  SuperMonkey: \"magic\",\r\n  TackShooter: \"primary\",\r\n  WizardMonkey: \"magic\",\r\n  // Heroes\r\n  AdmiralBrickell: \"hero\",\r\n  Adora: \"hero\",\r\n  Benjamin: \"hero\",\r\n  CaptainChurchill: \"hero\",\r\n  Corvus: \"hero\",\r\n  Etienne: \"hero\",\r\n  Ezili: \"hero\",\r\n  Geraldo: \"hero\",\r\n  Gwendolin: \"hero\",\r\n  ObynGreenfoot: \"hero\",\r\n  PatFusty: \"hero\",\r\n  Psi: \"hero\",\r\n  Quincy: \"hero\",\r\n  Rosalia: \"hero\",\r\n  Sauda: \"hero\",\r\n  StrikerJones: \"hero\",\r\n  ChosenPrimaryHero: \"hero\",\r\n};\r\n\r\nexport const prettyEventNames: { [key in EventType]: string } = {\r\n  Race: \"Race\",\r\n  Boss: \"Boss\",\r\n  Boss2: \"Boss\",\r\n  Boss3: \"Boss\",\r\n  Boss4: \"Boss\",\r\n  CtPlayer: \"Contested Territory\",\r\n  CtTeam: \"Contested Territory\",\r\n};\r\n\r\nexport const prettyNames: { [key in EventType]: string } = {\r\n  Race: \"Race\",\r\n  Boss: \"Solo\",\r\n  Boss2: \"Duo\",\r\n  Boss3: \"Trio\",\r\n  Boss4: \"Quad\",\r\n  CtPlayer: \"Player\",\r\n  CtTeam: \"Team\",\r\n};\r\n"],"names":["id","number","useLeaderboard","eventType","eventPos","page","bossMode","numOfPages","arguments","length","undefined","data","setData","useState","events","setEvents","loading","setLoading","error","setError","useMemo","bossUrl","ctUrl","headers","mode","async","console","log","url","racesResponse","fetch","raceData","json","body","leaderboard","bossesResponse","bossData","leaderboard_elite_players_1","leaderboard_standard_players_1","slice","ctResponse","ctData","leaderboard_team","leaderboard_player","response","jsonData","success","Error","i","ok","newJsonData","concat","nextPlayersToCheck","players","indecesToSplice","playersEntry","currentPlayerIndex","j","scoreParts","score","push","displayName","profile","otherPlayers","reverse","map","x","splice","fetchData","profileUrl","badgeName","badgeTip","name","_ref","matchedUser","verifiedUsers","find","toLowerCase","_jsxs","className","children","badges","some","filter","badge","_jsx","_Fragment","useProfileData","fetched","setFetched","model","ProfileModal","profileData","profileLoading","isPlayer","guildData","playerData","ownerData","ownerLoading","ownerFetched","owner","style","backgroundImage","bannerURL","method","src","avatarURL","frameURL","iconURL","Badges","rankImage","rank","veteranRank","vetRankImage","status","numMembers","onClick","document","getElementById","showModal","Object","keys","raceMedalImages","medal","_medalsRace","formatToUpperCase","_playerData$_medalsRa","raceMedalReward","bossNormalMedalImages","_medalsBoss","_playerData$_medalsBo","bossEliteMedalImages","_medalsBossElite","_playerData$_medalsBo2","ctPlayerMedalImages","_medalsCTGlobal","_playerData$_medalsCT","Loading","_entry$otherPlayers","entry","index","event","delta","showDelta","handleDelta","scoreString","isLowerBad","convertMsToTimeFormat","scoringType","toLocaleString","handleMedal","placeToRaceMedal","totalScores","placeToBossNormalMedal","totalScores_standard","placeToBossEliteMedal","placeToCtTeamMedal","totalScores_team","placeToCtPlayerMedal","totalScores_player","appendOrdinalSuffix","handleDisplayMedals","handleMainScore","image","leastCashImage","leastTiersImage","ctPointsImage","handleSecondaryScore","dataTip","timeAgo","start","part","Date","player","_playerData$_medalsRa2","selectionName","selectionId","selections","selection","ids","includes","onClickFunction","Leaderboard","alert","setAlert","alertType","message","leaderboardType","setLeaderboardType","setEventPos","setPage","setBossMode","firstPlaceScore","setFirstPlaceScore","setShowDelta","leaderboardData","eventData","handlePageInput","e","value","target","test","numVal","Number","useEffect","prettyEventNames","SelectionRow","onChange","options","selectedIndex","ctIds","a","prev","type","inputMode","placeholder","next","checked","getTotalScores","totalScores_elite","role","xmlns","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","LeaderboardCard","roundEven5","num","Math","floor","round","ms","hours","minutes","seconds","milliseconds","formattedHours","toString","padStart","formattedMinutes","formattedSeconds","formattedMilliseconds","timestamp","elapsed","now","msPerMinute","msPerSecond","msPerHour","msPerDay","days","formatGameEntityName","entity","replace","match","formatGoldenAppleDiscordEmote","relic","split","word","charAt","toUpperCase","join","place","totalEntries","percentile","black_diamond","red_diamond","diamond","gold_diamond","double_gold","gold_silver","double_silver","silver","bronze","ctTeamMedalImages","placeToCtHistoryEmote","placeToCtTeamLocalMedal","ctTeamLocalMedalImages","k","convertGameTypeToString","gameType","formatDateToEventHighlightDate","epochMs","date","day","getUTCDate","month","timeZone","year","getUTCFullYear","towerTypes","Alchemist","BananaFarm","BeastHandler","BoomerangMonkey","BombShooter","DartMonkey","DartlingGunner","Druid","EngineerMonkey","GlueGunner","HeliPilot","IceMonkey","Mermonkey","MonkeyAce","MonkeyBuccaneer","MonkeySub","MonkeyVillage","MortarMonkey","NinjaMonkey","SniperMonkey","SpikeFactory","SuperMonkey","TackShooter","WizardMonkey","AdmiralBrickell","Adora","Benjamin","CaptainChurchill","Corvus","Etienne","Ezili","Geraldo","Gwendolin","ObynGreenfoot","PatFusty","Psi","Quincy","Rosalia","Sauda","StrikerJones","ChosenPrimaryHero","Race","Boss","Boss2","Boss3","Boss4","CtPlayer","CtTeam"],"sourceRoot":""}