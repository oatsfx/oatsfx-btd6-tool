{"version":3,"file":"static/js/488.78741a75.chunk.js","mappings":"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OACTC,MAAO,OACPC,QAAS,OACTC,UAAW,OACXC,cAAe,OACfC,SAAU,OACVC,IAAK,OACLC,OAAQ,OACRC,QAAS,OACTC,MAAO,OACPC,aAAc,OACdC,kBAAmB,QAGRC,EAAmD,CAC9DC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,MAAO,OACPC,SAAU,sBACVC,OAAQ,uBAaGC,EAA0D,CACrEC,KAAM,EACNC,KAAM,EACNC,WAAY,EACZC,YAAa,E,8yWCzLFC,GAAqC,CAChDvD,UAAWwD,EACXvD,WAAYwD,EACZvD,aAAcwD,EACdvD,gBAAiBwD,EACjBvD,YAAawD,EACbvD,WAAYwD,EACZvD,eAAgBwD,EAChBvD,UAAWwD,EACXvD,MAAOwD,EACPvD,eAAgBwD,EAChBvD,WAAYwD,EACZvD,UAAWwD,EACXvD,UAAWwD,EACXvD,UAAWwD,EACXvD,UAAWwD,EACXvD,gBAAiBwD,EACjBvD,UAAWwD,EACXvD,cAAewD,EACfvD,aAAcwD,EACdvD,YAAawD,EACbvD,aAAcwD,EACdvD,aAAcwD,EACdvD,YAAawD,EACbvD,YAAawD,EACbvD,aAAcwD,EAEdvD,gBAAiBwD,GACjBvD,MAAOwD,GACPvD,SAAUwD,GACVvD,iBAAkBwD,GAClBvD,OAAQwD,GACRvD,QAASwD,GACTvD,MAAOwD,GACPvD,QAASwD,GACTvD,UAAWwD,GACXvD,cAAewD,GACfvD,SAAUwD,GACVvD,IAAKwD,GACLvD,OAAQwD,GACRvD,QAASwD,GACTvD,MAAOwD,GACPvD,aAAcwD,GACdvD,kBAAmB,IAGRwD,GAAY,CACvBC,aACE,4GACFC,UACE,yGACFC,cACE,6GACFC,aACE,4GACFC,QACE,sGACFC,OACE,qGACFC,MACE,oGACFC,cACE,6GACFC,gBACE,+GACFC,WACE,0GACFC,MACE,oGACFC,OACE,qGACFC,cACE,6GACFC,OACE,qGACFC,UACE,wGACFC,cACE,6GACFC,QACE,sGACFC,OACE,qGACFC,WACE,0GACFC,aACE,4GACFC,SACE,wGACFC,WACE,yGACFC,UACE,wGACFC,aACE,8GACFC,QACE,sGACFC,YACE,2GACFC,cACE,6GACFC,YACE,2GACFC,WACE,0GACFC,OACE,qGACFC,QACE,sGACFC,MACE,oGACFC,YACE,2GACFC,SACE,uGACFC,UACE,0GACFC,YACE,4GACFC,KAAM,mGACNC,YACE,2GACFC,aACE,4GACFC,KAAM,mGACNC,gBACE,iHACFC,gBACE,+GACFC,aACE,4GACFC,YACE,2GACFC,aACE,4GACFC,YACE,4GACFC,WACE,2GACFC,KAAM,mGACNC,SACE,wGACFC,SACE,wGACFC,UACE,wGACFC,WACE,yGACFC,KAAM,mGACNC,OACE,qGACFC,YACE,2GACFC,KAAM,mGACNC,OACE,qGACFC,OACE,qGACFC,UACE,wGACFC,UACE,wGACFC,OACE,qGACFC,aACE,4GACFC,SACE,uGACFC,aACE,4GACFC,UACE,wGACFC,cACE,6GACFC,cACE,6GACFC,SACE,wGACFC,UACE,wGACFC,WACE,0GACFC,WACE,0GACFC,UACE,yGACFC,SACE,uGACFC,YACE,0GACFC,UACE,yGACFC,WACE,0GACFC,SACE,uGACFC,QACE,wGAGSC,GAAc,CACzBC,WAAYC,EACZC,UAAWC,EACXC,eAAgBC,EAChBC,oBAAqBC,EACrBC,gBAAiBC,EACjBC,YAAaC,EACbC,YAAaC,EACbC,YAAaC,EACbC,SAAUC,EACVC,SAAUC,EACVC,aAAcC,EACdC,SAAUC,EACVC,eAAgBC,EAChBC,UAAWC,EACXC,WAAYC,EACZC,SAAUC,EACVC,iBAAkBC,EAClBC,UAAWC,EACXC,UAAWC,EACXC,UAAWC,EACXC,aAAcC,EACdC,YAAaC,EACbC,cAAeC,EACfC,gBAAiBC,EACjBC,UAAWC,EACXC,SAAUC,EACVC,YAAaC,GACbC,aAAcC,GACdC,gBAAiBC,GACjBC,aAAcC,GACdC,YAAaC,GACbC,WAAYC,GACZC,WAAYC,GACZC,eAAgBC,GAChBC,cAAeC,GACfC,cAAeC,GACfC,iBAAkBC,GAClBC,eAAgBC,GAChBC,QAASC,GACTC,OAAQC,IAGGC,GAAa,CACxBC,OAAQC,GACRC,MAAOC,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","sources":["components/Loading/Loading.tsx","util/converters.ts","util/formatters.ts"],"sourcesContent":["import loading from \"images/misc/loading.gif\";\r\n\r\nconst Loading = ({ size }: { size?: number }) => {\r\n  return <img src={loading} alt=\"Loading\" style={{ width: size }} />;\r\n};\r\n\r\nexport default Loading;\r\n","import { GameType, Relic, Tower } from \"types/ct\";\r\nimport {\r\n  bossEliteMedalImages,\r\n  bossNormalMedalImages,\r\n  ctPlayerMedalImages,\r\n  ctTeamLocalMedalImages,\r\n  ctTeamMedalImages,\r\n  raceMedalImages,\r\n} from \"./formatters\";\r\nimport { EventType } from \"types/events\";\r\n\r\nexport type TowerType = \"primary\" | \"military\" | \"magic\" | \"support\" | \"hero\";\r\n\r\nexport const roundEven5 = (num: number) => {\r\n  if (num % 5 === 2.5) {\r\n    return Math.floor(num / 5) * 5;\r\n  }\r\n  return Math.round(num / 5) * 5;\r\n};\r\n\r\nexport const convertMsToTimeFormat = (\r\n  ms: number,\r\n  roundMs: boolean = true\r\n): string => {\r\n  // Calculate the hours, minutes, seconds, and milliseconds\r\n  const hours = Math.floor(ms / 3600000);\r\n  const minutes = Math.floor((ms % 3600000) / 60000);\r\n  const seconds = Math.floor((ms % 60000) / 1000);\r\n  const milliseconds = Math.floor(ms % 1000); // Extract two digits of milliseconds\r\n  const roundedMs = Math.floor((ms % 1000) / 10); // Extract two digits of milliseconds\r\n\r\n  // Format each part to ensure two digits\r\n  const formattedHours = hours > 0 ? hours.toString().padStart(2, \"0\") : \"\";\r\n  const formattedMinutes = minutes.toString().padStart(2, \"0\");\r\n  const formattedSeconds = seconds.toString().padStart(2, \"0\");\r\n  const formattedMilliseconds = roundMs\r\n    ? roundedMs.toString().padStart(2, \"0\")\r\n    : milliseconds.toString().padStart(3, \"0\");\r\n\r\n  // Combine and return the formatted string\r\n  return formattedHours\r\n    ? `${formattedHours}:${formattedMinutes}:${formattedSeconds}.${formattedMilliseconds}`\r\n    : `${formattedMinutes}:${formattedSeconds}.${formattedMilliseconds}`;\r\n};\r\n\r\nexport const convertMsToSecondsFormat = (ms: number): string => {\r\n  const seconds = Math.floor(ms / 1000);\r\n  const milliseconds = Math.round((ms % 1000) / 10); // Round to 2 decimal places\r\n\r\n  return milliseconds === 0\r\n    ? `${seconds}`\r\n    : `${seconds}.${milliseconds.toString().padStart(2, \"0\")}`;\r\n};\r\n\r\nexport const timeAgo = (timestamp: number): string => {\r\n  const now = Date.now();\r\n  const elapsed = now - timestamp;\r\n\r\n  const msPerSecond = 1000;\r\n  const msPerMinute = msPerSecond * 60;\r\n  const msPerHour = msPerMinute * 60;\r\n  const msPerDay = msPerHour * 24;\r\n\r\n  if (elapsed < msPerMinute) {\r\n    const seconds = Math.floor(elapsed / msPerSecond);\r\n    return `${seconds} second${seconds !== 1 ? \"s\" : \"\"} ago`;\r\n  } else if (elapsed < msPerHour) {\r\n    const minutes = Math.floor(elapsed / msPerMinute);\r\n    return `${minutes} minute${minutes !== 1 ? \"s\" : \"\"} ago`;\r\n  } else if (elapsed < msPerDay) {\r\n    const hours = Math.floor(elapsed / msPerHour);\r\n    return `${hours} hour${hours !== 1 ? \"s\" : \"\"} ago`;\r\n  } else {\r\n    const days = Math.floor(elapsed / msPerDay);\r\n    return `${days} day${days !== 1 ? \"s\" : \"\"} ago`;\r\n  }\r\n};\r\n\r\nexport const formatGameEntityName = (entity: string): string => {\r\n  const wordsToExclude = [\"or\", \"the\", \"a\", \"of\"];\r\n\r\n  return entity\r\n    .replace(/([a-z])([A-Z])/g, \"$1 $2\") // Add space before capitals\r\n    .replace(/\\b(Or|The|A|Of)\\b/g, (match) => match.toLowerCase()); // Lowercase specific words\r\n};\r\n\r\nexport const formatGoldenAppleDiscordEmote = (relic: Relic): string => {\r\n  return `:z_${relic}:`;\r\n};\r\n\r\nexport const formatToUpperCase = (entity: string): string => {\r\n  return entity\r\n    .split(\"_\")\r\n    .map((word) => {\r\n      return word.charAt(0).toUpperCase() + word.slice(1);\r\n    })\r\n    .join(\"\");\r\n};\r\n\r\nexport const placeToRaceMedal = (\r\n  place: number,\r\n  totalEntries: number\r\n): string => {\r\n  if (place < 1) {\r\n    return \"\";\r\n  }\r\n\r\n  const percentile = (place / totalEntries) * 100;\r\n\r\n  if (place === 1) {\r\n    return raceMedalImages.black_diamond;\r\n  } else if (place === 2) {\r\n    return raceMedalImages.red_diamond;\r\n  } else if (place === 3) {\r\n    return raceMedalImages.diamond;\r\n  } else if (place <= 50) {\r\n    return raceMedalImages.gold_diamond;\r\n  } else if (percentile <= 1) {\r\n    return raceMedalImages.double_gold;\r\n  } else if (percentile <= 10) {\r\n    return raceMedalImages.gold_silver;\r\n  } else if (percentile <= 25) {\r\n    return raceMedalImages.double_silver;\r\n  } else if (percentile <= 50) {\r\n    return raceMedalImages.silver;\r\n  } else if (percentile <= 75) {\r\n    return raceMedalImages.bronze;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const placeToBossNormalMedal = (\r\n  place: number,\r\n  totalEntries: number\r\n): string => {\r\n  if (place < 1) {\r\n    return \"\";\r\n  }\r\n\r\n  const percentile = (place / totalEntries) * 100;\r\n\r\n  if (place === 1) {\r\n    return bossNormalMedalImages.black_diamond;\r\n  } else if (place === 2) {\r\n    return bossNormalMedalImages.red_diamond;\r\n  } else if (place === 3) {\r\n    return bossNormalMedalImages.diamond;\r\n  } else if (place <= 50) {\r\n    return bossNormalMedalImages.gold_diamond;\r\n  } else if (percentile <= 1) {\r\n    return bossNormalMedalImages.double_gold;\r\n  } else if (percentile <= 10) {\r\n    return bossNormalMedalImages.gold_silver;\r\n  } else if (percentile <= 25) {\r\n    return bossNormalMedalImages.double_silver;\r\n  } else if (percentile <= 50) {\r\n    return bossNormalMedalImages.silver;\r\n  } else if (percentile <= 75) {\r\n    return bossNormalMedalImages.bronze;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const placeToBossEliteMedal = (\r\n  place: number,\r\n  totalEntries: number\r\n): string => {\r\n  if (place < 1) {\r\n    return \"\";\r\n  }\r\n\r\n  const percentile = (place / totalEntries) * 100;\r\n\r\n  if (place === 1) {\r\n    return bossEliteMedalImages.black_diamond;\r\n  } else if (place === 2) {\r\n    return bossEliteMedalImages.red_diamond;\r\n  } else if (place === 3) {\r\n    return bossEliteMedalImages.diamond;\r\n  } else if (place <= 50) {\r\n    return bossEliteMedalImages.gold_diamond;\r\n  } else if (percentile <= 1) {\r\n    return bossEliteMedalImages.double_gold;\r\n  } else if (percentile <= 10) {\r\n    return bossEliteMedalImages.gold_silver;\r\n  } else if (percentile <= 25) {\r\n    return bossEliteMedalImages.double_silver;\r\n  } else if (percentile <= 50) {\r\n    return bossEliteMedalImages.silver;\r\n  } else if (percentile <= 75) {\r\n    return bossEliteMedalImages.bronze;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const placeToCtPlayerMedal = (\r\n  place: number,\r\n  totalEntries: number\r\n): string => {\r\n  if (place < 1) {\r\n    return \"\";\r\n  }\r\n\r\n  const percentile = (place / totalEntries) * 100;\r\n\r\n  if (place <= 25) {\r\n    return ctPlayerMedalImages.diamond;\r\n  } else if (place <= 100) {\r\n    return ctPlayerMedalImages.gold_diamond;\r\n  } else if (percentile <= 1) {\r\n    return ctPlayerMedalImages.double_gold;\r\n  } else if (percentile <= 10) {\r\n    return ctPlayerMedalImages.gold_silver;\r\n  } else if (percentile <= 25) {\r\n    return ctPlayerMedalImages.double_silver;\r\n  } else if (percentile <= 50) {\r\n    return ctPlayerMedalImages.silver;\r\n  } else if (percentile <= 75) {\r\n    return ctPlayerMedalImages.bronze;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const placeToCtTeamMedal = (\r\n  place: number,\r\n  totalEntries: number\r\n): string => {\r\n  if (place < 1) {\r\n    return \"\";\r\n  }\r\n\r\n  const percentile = (place / totalEntries) * 100;\r\n\r\n  if (place === 1) {\r\n    return ctTeamMedalImages.black_diamond;\r\n  } else if (place === 2) {\r\n    return ctTeamMedalImages.red_diamond;\r\n  } else if (place === 3) {\r\n    return ctTeamMedalImages.diamond;\r\n  } else if (place <= 25) {\r\n    return ctTeamMedalImages.gold_diamond;\r\n  } else if (place <= 100) {\r\n    return ctTeamMedalImages.double_gold;\r\n  } else if (percentile <= 1) {\r\n    return ctTeamMedalImages.gold_silver;\r\n  } else if (percentile <= 10) {\r\n    return ctTeamMedalImages.double_silver;\r\n  } else if (percentile <= 25) {\r\n    return ctTeamMedalImages.silver;\r\n  } else if (percentile <= 75) {\r\n    return ctTeamMedalImages.bronze;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const placeToCtHistoryEmote = (\r\n  place: number,\r\n  totalEntries: number\r\n): string => {\r\n  const percentile = (place / totalEntries) * 100;\r\n\r\n  if (place === 1) {\r\n    return \":GT1:\";\r\n  } else if (place === 2) {\r\n    return \":GT2:\";\r\n  } else if (place === 3) {\r\n    return \":GT3:\";\r\n  } else if (place <= 25) {\r\n    return \":GT25\";\r\n  } else if (place <= 100) {\r\n    return \":GT100:\";\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const placeToCtTeamLocalMedal = (place: number) => {\r\n  switch (place) {\r\n    case 1:\r\n      return ctTeamLocalMedalImages.diamond;\r\n    case 2:\r\n      return ctTeamLocalMedalImages.double_gold;\r\n    case 3:\r\n      return ctTeamLocalMedalImages.silver;\r\n    case 4:\r\n      return ctTeamLocalMedalImages.bronze;\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport const appendOrdinalSuffix = (number: number): string => {\r\n  const j = number % 10;\r\n  const k = number % 100;\r\n  if (j === 1 && k !== 11) {\r\n    return number + \"st\";\r\n  }\r\n  if (j === 2 && k !== 12) {\r\n    return number + \"nd\";\r\n  }\r\n  if (j === 3 && k !== 13) {\r\n    return number + \"rd\";\r\n  }\r\n  return number + \"th\";\r\n};\r\n\r\nexport const convertGameTypeToString = (gameType: number): string => {\r\n  switch (gameType) {\r\n    case 2:\r\n      return \"Race\";\r\n    case 4:\r\n      return \"Boss\";\r\n    case 8:\r\n      return \"LeastCash\";\r\n    case 9:\r\n      return \"LeastTiers\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport const formatEpochToReadableDate = (epochMs: number): string => {\r\n  const date = new Date(epochMs);\r\n  return date.toLocaleDateString(\"en-US\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  });\r\n};\r\n\r\nexport const formatDateToEventHighlightDate = (epochMs: number): string => {\r\n  const date = new Date(epochMs);\r\n  const day = date.getUTCDate();\r\n  const month = date.toLocaleString(\"en-US\", {\r\n    month: \"long\",\r\n    timeZone: \"UTC\",\r\n  });\r\n  const year = date.getUTCFullYear();\r\n  return `${appendOrdinalSuffix(day)} ${month} ${year}`;\r\n};\r\n\r\nexport const towerTypes: { [key in Tower]: TowerType } = {\r\n  Alchemist: \"magic\",\r\n  BananaFarm: \"support\",\r\n  BeastHandler: \"support\",\r\n  BoomerangMonkey: \"primary\",\r\n  BombShooter: \"primary\",\r\n  DartMonkey: \"primary\",\r\n  DartlingGunner: \"military\",\r\n  Desperado: \"primary\",\r\n  Druid: \"magic\",\r\n  EngineerMonkey: \"support\",\r\n  GlueGunner: \"primary\",\r\n  HeliPilot: \"military\",\r\n  IceMonkey: \"primary\",\r\n  Mermonkey: \"magic\",\r\n  MonkeyAce: \"military\",\r\n  MonkeyBuccaneer: \"military\",\r\n  MonkeySub: \"military\",\r\n  MonkeyVillage: \"support\",\r\n  MortarMonkey: \"military\",\r\n  NinjaMonkey: \"magic\",\r\n  SniperMonkey: \"military\",\r\n  SpikeFactory: \"support\",\r\n  SuperMonkey: \"magic\",\r\n  TackShooter: \"primary\",\r\n  WizardMonkey: \"magic\",\r\n  // Heroes\r\n  AdmiralBrickell: \"hero\",\r\n  Adora: \"hero\",\r\n  Benjamin: \"hero\",\r\n  CaptainChurchill: \"hero\",\r\n  Corvus: \"hero\",\r\n  Etienne: \"hero\",\r\n  Ezili: \"hero\",\r\n  Geraldo: \"hero\",\r\n  Gwendolin: \"hero\",\r\n  ObynGreenfoot: \"hero\",\r\n  PatFusty: \"hero\",\r\n  Psi: \"hero\",\r\n  Quincy: \"hero\",\r\n  Rosalia: \"hero\",\r\n  Sauda: \"hero\",\r\n  StrikerJones: \"hero\",\r\n  ChosenPrimaryHero: \"hero\",\r\n};\r\n\r\nexport const prettyEventNames: { [key in EventType]: string } = {\r\n  Race: \"Race\",\r\n  Boss: \"Boss\",\r\n  Boss2: \"Boss\",\r\n  Boss3: \"Boss\",\r\n  Boss4: \"Boss\",\r\n  CtPlayer: \"Contested Territory\",\r\n  CtTeam: \"Contested Territory\",\r\n};\r\n\r\nexport const prettyNames: { [key in EventType]: string } = {\r\n  Race: \"Race\",\r\n  Boss: \"Solo\",\r\n  Boss2: \"Duo\",\r\n  Boss3: \"Trio\",\r\n  Boss4: \"Quad\",\r\n  CtPlayer: \"Player\",\r\n  CtTeam: \"Team\",\r\n};\r\n\r\nexport const gameTypeToSubGameTypeVal: { [key in GameType]: number } = {\r\n  race: 2,\r\n  boss: 4,\r\n  least_cash: 8,\r\n  least_tiers: 9,\r\n};\r\n","// Towers\r\nimport alchemistImage from \"images/towers/alchemist.webp\";\r\nimport bananaFarmImage from \"images/towers/banana_farm.webp\";\r\nimport beastHandlerImage from \"images/towers/beast_handler.webp\";\r\nimport bombShooterImage from \"images/towers/bomb_shooter.webp\";\r\nimport boomerangMonkeyImage from \"images/towers/boomerang_monkey.webp\";\r\nimport dartMonkeyImage from \"images/towers/dart_monkey.webp\";\r\nimport dartlingGunnerImage from \"images/towers/dartling_gunner.webp\";\r\nimport desperadoImage from \"images/towers/desperado.webp\";\r\nimport druidImage from \"images/towers/druid.webp\";\r\nimport engineerMonkeyImage from \"images/towers/engineer_monkey.webp\";\r\nimport glueGunnerImage from \"images/towers/glue_gunner.webp\";\r\nimport heliPilotImage from \"images/towers/heli_pilot.webp\";\r\nimport iceMonkeyImage from \"images/towers/ice_monkey.webp\";\r\nimport mermonkeyImage from \"images/towers/mermonkey.webp\";\r\nimport monkeyAceImage from \"images/towers/monkey_ace.webp\";\r\nimport monkeyBuccaneerImage from \"images/towers/monkey_buccaneer.webp\";\r\nimport monkeySubImage from \"images/towers/monkey_sub.webp\";\r\nimport monkeyVillageImage from \"images/towers/monkey_village.webp\";\r\nimport mortarMonkeyImage from \"images/towers/mortar_monkey.webp\";\r\nimport ninjaMonkeyImage from \"images/towers/ninja_monkey.webp\";\r\nimport sniperMonkeyImage from \"images/towers/sniper_monkey.webp\";\r\nimport spikeFactoryImage from \"images/towers/spike_factory.webp\";\r\nimport superMonkeyImage from \"images/towers/super_monkey.webp\";\r\nimport tackShooterImage from \"images/towers/tack_shooter.webp\";\r\nimport wizardMonkeyImage from \"images/towers/wizard_monkey.webp\";\r\n\r\n// Relics\r\nimport abilitizedImage from \"images/relics/abilitized.webp\";\r\nimport airAndSeaImage from \"images/relics/air_and_sea.webp\";\r\nimport alchemistTouchImage from \"images/relics/alchemist_touch.webp\";\r\nimport biggerBloonSabotageImage from \"images/relics/bigger_bloon_sabotage.webp\";\r\nimport boxOfChocolatesImage from \"images/relics/box_of_chocolates.webp\";\r\nimport boxOfMonkeyImage from \"images/relics/box_of_monkey.webp\";\r\nimport brokenHeartImage from \"images/relics/broken_heart.webp\";\r\nimport camoFloggedImage from \"images/relics/camo_flogged.webp\";\r\nimport camoTrapImage from \"images/relics/camo_trap.webp\";\r\nimport deepHeatImage from \"images/relics/deep_heat.webp\";\r\nimport durableShotsImage from \"images/relics/durable_shots.webp\";\r\nimport elDoradoImage from \"images/relics/el_dorado.webp\";\r\nimport extraEmpoweredImage from \"images/relics/extra_empowered.webp\";\r\nimport flintTipsImage from \"images/relics/flint_tips.webp\";\r\nimport fortifriedImage from \"images/relics/fortifried.webp\";\r\nimport glueTrapImage from \"images/relics/glue_trap.webp\";\r\nimport goingTheDistanceImage from \"images/relics/going_the_distance.webp\";\r\nimport hardBakedImage from \"images/relics/hard_baked.webp\";\r\nimport heartlessImage from \"images/relics/heartless.webp\";\r\nimport heroBoostImage from \"images/relics/hero_boost.webp\";\r\nimport magicMonkeysImage from \"images/relics/magic_monkeys.webp\";\r\nimport manaBulwarkImage from \"images/relics/mana_bulwark.webp\";\r\nimport marchingBootsImage from \"images/relics/marching_boots.webp\";\r\nimport militaryMonkeysImage from \"images/relics/military_monkeys.webp\";\r\nimport moabClashImage from \"images/relics/moab_clash.webp\";\r\nimport moabMineImage from \"images/relics/moab_mine.webp\";\r\nimport monkeyBoostImage from \"images/relics/monkey_boost.webp\";\r\nimport monkeyTycoonImage from \"images/relics/monkey_tycoon.webp\";\r\nimport primaryPrimatesImage from \"images/relics/primary_primates.webp\";\r\nimport regenerationImage from \"images/relics/regeneration.webp\";\r\nimport restorationImage from \"images/relics/restoration.webp\";\r\nimport roadSpikesImage from \"images/relics/road_spikes.webp\";\r\nimport roundingUpImage from \"images/relics/rounding_up.webp\";\r\nimport royalTreatmentImage from \"images/relics/royal_treatment.webp\";\r\nimport sharpsplosionImage from \"images/relics/sharpsplosion.webp\";\r\nimport startingStashImage from \"images/relics/starting_stash.webp\";\r\nimport superMonkeyStormImage from \"images/relics/super_monkey_storm.webp\";\r\nimport supportSimiansImage from \"images/relics/support_simians.webp\";\r\nimport techbotImage from \"images/relics/techbot.webp\";\r\nimport thriveImage from \"images/relics/thrive.webp\";\r\n\r\n// Tile Type Images\r\nimport bannerImage from \"images/ct/banner_s.webp\";\r\nimport relicImage from \"images/ct/relic_s.webp\";\r\nimport blankImage from \"images/ct/regular_s.webp\";\r\n\r\n// Game Type Images\r\nimport bloonariusImage from \"images/game_types/bloonarius.webp\";\r\nimport dreadbloonImage from \"images/game_types/dreadbloon.webp\";\r\nimport leastCashImage from \"images/game_types/least_cash.webp\";\r\nimport leastTiersImage from \"images/game_types/least_tiers.webp\";\r\nimport lychImage from \"images/game_types/lych.webp\";\r\nimport phayzeImage from \"images/game_types/phayze.webp\";\r\nimport raceImage from \"images/game_types/race.webp\";\r\nimport vortexImage from \"images/game_types/vortex.webp\";\r\n\r\n// Hero Images\r\nimport admiralBrickellImage from \"images/heroes/admiral_brickell.webp\";\r\nimport adoraImage from \"images/heroes/adora.webp\";\r\nimport benjaminImage from \"images/heroes/benjamin.webp\";\r\nimport captainChurchillImage from \"images/heroes/captain_churchill.webp\";\r\nimport corvusImage from \"images/heroes/corvus.webp\";\r\nimport etienneImage from \"images/heroes/etienne.webp\";\r\nimport eziliImage from \"images/heroes/ezili.webp\";\r\nimport geraldoImage from \"images/heroes/geraldo.webp\";\r\nimport gwendolinImage from \"images/heroes/gwendolin.webp\";\r\nimport obynGreenfootImage from \"images/heroes/obyn_greenfoot.webp\";\r\nimport patFustyImage from \"images/heroes/pat_fusty.webp\";\r\nimport psiImage from \"images/heroes/psi.webp\";\r\nimport quincyImage from \"images/heroes/quincy.webp\";\r\nimport rosaliaImage from \"images/heroes/rosalia.webp\";\r\nimport saudaImage from \"images/heroes/sauda.webp\";\r\nimport strikerJonesImage from \"images/heroes/striker_jones.webp\";\r\n\r\n// Race Medal Images\r\nimport raceFirstImage from \"images/medals/race/black_diamond.webp\";\r\nimport raceSecondImage from \"images/medals/race/red_diamond.webp\";\r\nimport raceThirdImage from \"images/medals/race/diamond.webp\";\r\nimport raceTop50Image from \"images/medals/race/gold_diamond.webp\";\r\nimport raceTop1PerImage from \"images/medals/race/double_gold.webp\";\r\nimport raceTop10PerImage from \"images/medals/race/gold_silver.webp\";\r\nimport raceTop25PerImage from \"images/medals/race/double_silver.webp\";\r\nimport raceTop50PerImage from \"images/medals/race/silver.webp\";\r\nimport raceTop75PerImage from \"images/medals/race/bronze.webp\";\r\n\r\n// Boss Medal Images\r\nimport bossFirstImage from \"images/medals/boss/normal/black_diamond.webp\";\r\nimport bossSecondImage from \"images/medals/boss/normal/red_diamond.webp\";\r\nimport bossThirdImage from \"images/medals/boss/normal/diamond.webp\";\r\nimport bossTop50Image from \"images/medals/boss/normal/gold_diamond.webp\";\r\nimport bossTop1PerImage from \"images/medals/boss/normal/double_gold.webp\";\r\nimport bossTop10PerImage from \"images/medals/boss/normal/gold_silver.webp\";\r\nimport bossTop25PerImage from \"images/medals/boss/normal/double_silver.webp\";\r\nimport bossTop50PerImage from \"images/medals/boss/normal/silver.webp\";\r\nimport bossTop75PerImage from \"images/medals/boss/normal/bronze.webp\";\r\n\r\n// Boss Medal Images\r\nimport bossEliteFirstImage from \"images/medals/boss/elite/black_diamond.webp\";\r\nimport bossEliteSecondImage from \"images/medals/boss/elite/red_diamond.webp\";\r\nimport bossEliteThirdImage from \"images/medals/boss/elite/diamond.webp\";\r\nimport bossEliteTop50Image from \"images/medals/boss/elite/gold_diamond.webp\";\r\nimport bossEliteTop1PerImage from \"images/medals/boss/elite/double_gold.webp\";\r\nimport bossEliteTop10PerImage from \"images/medals/boss/elite/gold_silver.webp\";\r\nimport bossEliteTop25PerImage from \"images/medals/boss/elite/double_silver.webp\";\r\nimport bossEliteTop50PerImage from \"images/medals/boss/elite/silver.webp\";\r\nimport bossEliteTop75PerImage from \"images/medals/boss/elite/bronze.webp\";\r\n\r\n// CT Player Medal Images\r\nimport ctPlayerTop25Image from \"images/medals/ct/player/global/diamond.webp\";\r\nimport ctPlayerTop100Image from \"images/medals/ct/player/global/gold_diamond.webp\";\r\nimport ctPlayerTop1PerImage from \"images/medals/ct/player/global/double_gold.webp\";\r\nimport ctPlayerTop10PerImage from \"images/medals/ct/player/global/gold_silver.webp\";\r\nimport ctPlayerTop25PerImage from \"images/medals/ct/player/global/double_silver.webp\";\r\nimport ctPlayerTop50PerImage from \"images/medals/ct/player/global/silver.webp\";\r\nimport ctPlayerTop75PerImage from \"images/medals/ct/player/global/bronze.webp\";\r\n\r\n// CT Team Medal Images\r\nimport ctTeamFirstImage from \"images/medals/ct/team/global/black_diamond.webp\";\r\nimport ctTeamSecondImage from \"images/medals/ct/team/global/red_diamond.webp\";\r\nimport ctTeamThirdImage from \"images/medals/ct/team/global/diamond.webp\";\r\nimport ctTeamTop25Image from \"images/medals/ct/team/global/gold_diamond.webp\";\r\nimport ctTeamTop100Image from \"images/medals/ct/team/global/double_gold.webp\";\r\nimport ctTeamTop1PerImage from \"images/medals/ct/team/global/gold_silver.webp\";\r\nimport ctTeamTop10PerImage from \"images/medals/ct/team/global/double_silver.webp\";\r\nimport ctTeamTop25PerImage from \"images/medals/ct/team/global/silver.webp\";\r\nimport ctTeamTop75PerImage from \"images/medals/ct/team/global/bronze.webp\";\r\n\r\nimport ctTeamLocal1 from \"images/medals/ct/team/local/diamond.webp\";\r\nimport ctTeamLocal2 from \"images/medals/ct/team/local/double_gold.webp\";\r\nimport ctTeamLocal3 from \"images/medals/ct/team/local/silver.webp\";\r\nimport ctTeamLocal4 from \"images/medals/ct/team/local/bronze.webp\";\r\n\r\nimport badImage from \"images/bloons/Bad.webp\";\r\nimport badFortifiedImage from \"images/bloons/BadFortified.webp\";\r\nimport bfbImage from \"images/bloons/Bfb.webp\";\r\nimport bfbFortifiedImage from \"images/bloons/BfbFortified.webp\";\r\nimport blackImage from \"images/bloons/Black.webp\";\r\nimport blackCamoImage from \"images/bloons/BlackCamo.webp\";\r\nimport blackRegrowImage from \"images/bloons/BlackRegrow.webp\";\r\nimport blackRegrowCamoImage from \"images/bloons/BlackRegrowCamo.webp\";\r\nimport blueImage from \"images/bloons/Blue.webp\";\r\nimport blueCamoImage from \"images/bloons/BlueCamo.webp\";\r\nimport blueRegrowImage from \"images/bloons/BlueRegrow.webp\";\r\nimport blueRegrowCamoImage from \"images/bloons/BlueRegrowCamo.webp\";\r\nimport ceramicImage from \"images/bloons/Ceramic.webp\";\r\nimport ceramicCamoImage from \"images/bloons/CeramicCamo.webp\";\r\nimport ceramicFortifiedImage from \"images/bloons/CeramicFortified.webp\";\r\nimport ceramicFortifiedCamoImage from \"images/bloons/CeramicFortifiedCamo.webp\";\r\nimport ceramicRegrowImage from \"images/bloons/CeramicRegrow.webp\";\r\nimport ceramicRegrowCamoImage from \"images/bloons/CeramicRegrowCamo.webp\";\r\nimport ceramicRegrowFortifiedImage from \"images/bloons/CeramicRegrowFortified.webp\";\r\nimport ceramicRegrowFortifiedCamoImage from \"images/bloons/CeramicRegrowFortifiedCamo.webp\";\r\nimport ddtImage from \"images/bloons/Ddt.webp\";\r\nimport ddtFortifiedImage from \"images/bloons/DdtFortified.webp\";\r\nimport greenImage from \"images/bloons/Green.webp\";\r\nimport greenCamoImage from \"images/bloons/GreenCamo.webp\";\r\nimport greenRegrowImage from \"images/bloons/GreenRegrow.webp\";\r\nimport greenRegrowCamoImage from \"images/bloons/GreenRegrowCamo.webp\";\r\nimport leadImage from \"images/bloons/Lead.webp\";\r\nimport leadCamoImage from \"images/bloons/LeadCamo.webp\";\r\nimport leadFortifiedImage from \"images/bloons/LeadFortified.webp\";\r\nimport leadFortifiedCamoImage from \"images/bloons/LeadFortifiedCamo.webp\";\r\nimport leadRegrowImage from \"images/bloons/LeadRegrow.webp\";\r\nimport leadRegrowCamoImage from \"images/bloons/LeadRegrowCamo.webp\";\r\nimport leadRegrowFortifiedImage from \"images/bloons/LeadRegrowFortified.webp\";\r\nimport leadRegrowFortifiedCamoImage from \"images/bloons/LeadRegrowFortifiedCamo.webp\";\r\nimport moabImage from \"images/bloons/Moab.webp\";\r\nimport moabFortifiedImage from \"images/bloons/MoabFortified.webp\";\r\nimport pinkImage from \"images/bloons/Pink.webp\";\r\nimport pinkCamoImage from \"images/bloons/PinkCamo.webp\";\r\nimport pinkRegrowImage from \"images/bloons/PinkRegrow.webp\";\r\nimport pinkRegrowCamoImage from \"images/bloons/PinkRegrowCamo.webp\";\r\nimport purpleImage from \"images/bloons/Purple.webp\";\r\nimport purpleCamoImage from \"images/bloons/PurpleCamo.webp\";\r\nimport purpleRegrowImage from \"images/bloons/PurpleRegrow.webp\";\r\nimport purpleRegrowCamoImage from \"images/bloons/PurpleRegrowCamo.webp\";\r\nimport rainbowImage from \"images/bloons/Rainbow.webp\";\r\nimport rainbowCamoImage from \"images/bloons/RainbowCamo.webp\";\r\nimport rainbowRegrowImage from \"images/bloons/RainbowRegrow.webp\";\r\nimport rainbowRegrowCamoImage from \"images/bloons/RainbowRegrowCamo.webp\";\r\nimport redImage from \"images/bloons/Red.webp\";\r\nimport redCamoImage from \"images/bloons/RedCamo.webp\";\r\nimport redRegrowImage from \"images/bloons/RedRegrow.webp\";\r\nimport redRegrowCamoImage from \"images/bloons/RedRegrowCamo.webp\";\r\nimport whiteImage from \"images/bloons/White.webp\";\r\nimport whiteCamoImage from \"images/bloons/WhiteCamo.webp\";\r\nimport whiteRegrowImage from \"images/bloons/WhiteRegrow.webp\";\r\nimport whiteRegrowCamoImage from \"images/bloons/WhiteRegrowCamo.webp\";\r\nimport yellowImage from \"images/bloons/Yellow.webp\";\r\nimport yellowCamoImage from \"images/bloons/YellowCamo.webp\";\r\nimport yellowRegrowImage from \"images/bloons/YellowRegrow.webp\";\r\nimport yellowRegrowCamoImage from \"images/bloons/YellowRegrowCamo.webp\";\r\nimport zebraImage from \"images/bloons/Zebra.webp\";\r\nimport zebraCamoImage from \"images/bloons/ZebraCamo.webp\";\r\nimport zebraRegrowImage from \"images/bloons/ZebraRegrow.webp\";\r\nimport zebraRegrowCamoImage from \"images/bloons/ZebraRegrowCamo.webp\";\r\nimport zomgImage from \"images/bloons/Zomg.webp\";\r\nimport zomgFortifiedImage from \"images/bloons/ZomgFortified.webp\";\r\n\r\nimport { Tower } from \"types/ct\";\r\nimport { PlayerMedal, PlayerEventMedals } from \"types/leaderboards\";\r\nimport { Bloon } from \"types/roundSet\";\r\n\r\nexport const towerImages: Record<Tower, string> = {\r\n  Alchemist: alchemistImage,\r\n  BananaFarm: bananaFarmImage,\r\n  BeastHandler: beastHandlerImage,\r\n  BoomerangMonkey: boomerangMonkeyImage,\r\n  BombShooter: bombShooterImage,\r\n  DartMonkey: dartMonkeyImage,\r\n  DartlingGunner: dartlingGunnerImage,\r\n  Desperado: desperadoImage,\r\n  Druid: druidImage,\r\n  EngineerMonkey: engineerMonkeyImage,\r\n  GlueGunner: glueGunnerImage,\r\n  HeliPilot: heliPilotImage,\r\n  IceMonkey: iceMonkeyImage,\r\n  Mermonkey: mermonkeyImage,\r\n  MonkeyAce: monkeyAceImage,\r\n  MonkeyBuccaneer: monkeyBuccaneerImage,\r\n  MonkeySub: monkeySubImage,\r\n  MonkeyVillage: monkeyVillageImage,\r\n  MortarMonkey: mortarMonkeyImage,\r\n  NinjaMonkey: ninjaMonkeyImage,\r\n  SniperMonkey: sniperMonkeyImage,\r\n  SpikeFactory: spikeFactoryImage,\r\n  SuperMonkey: superMonkeyImage,\r\n  TackShooter: tackShooterImage,\r\n  WizardMonkey: wizardMonkeyImage,\r\n  // Heroes\r\n  AdmiralBrickell: admiralBrickellImage,\r\n  Adora: adoraImage,\r\n  Benjamin: benjaminImage,\r\n  CaptainChurchill: captainChurchillImage,\r\n  Corvus: corvusImage,\r\n  Etienne: etienneImage,\r\n  Ezili: eziliImage,\r\n  Geraldo: geraldoImage,\r\n  Gwendolin: gwendolinImage,\r\n  ObynGreenfoot: obynGreenfootImage,\r\n  PatFusty: patFustyImage,\r\n  Psi: psiImage,\r\n  Quincy: quincyImage,\r\n  Rosalia: rosaliaImage,\r\n  Sauda: saudaImage,\r\n  StrikerJones: strikerJonesImage,\r\n  ChosenPrimaryHero: \"\",\r\n};\r\n\r\nexport const mapImages = {\r\n  AdorasTemple:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/adoras_temple.webp')]\",\r\n  AlpineRun:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/alpine_run.webp')]\",\r\n  AncientPortal:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.5),rgba(48,47,61,1)),url('images/maps/ancient_portal.webp')]\",\r\n  AnotherBrick:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/another_brick.webp')]\",\r\n  Balance:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/balance.webp')]\",\r\n  Bazaar:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/bazaar.webp')]\",\r\n  Blons:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/blons.webp')]\",\r\n  BloodyPuddles:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/bloody_puddles.webp')]\",\r\n  BloonariusPrime:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/bloonarius_prime.webp')]\",\r\n  CandyFalls:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/candy_falls.webp')]\",\r\n  Cargo:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/cargo.webp')]\",\r\n  Carved:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/carved.webp')]\",\r\n  CastleRevenge:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/castle_revenge.webp')]\",\r\n  Chutes:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/chutes.webp')]\",\r\n  Cornfield:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/cornfield.webp')]\",\r\n  CoveredGarden:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/covered_garden.webp')]\",\r\n  Cracked:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/cracked.webp')]\",\r\n  Cubism:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/cubism.webp')]\",\r\n  DarkCastle:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/dark_castle.webp')]\",\r\n  DarkDungeons:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/dark_dungeons.webp')]\",\r\n  DarkPath:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/dark_path.webp')]\",\r\n  Downstream:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/downstream.webp')]\",\r\n  Encrypted:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/encrypted.webp')]\",\r\n  EndOfTheRoad:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/end_of_the_road.webp')]\",\r\n  Erosion:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/erosion.webp')]\",\r\n  FiringRange:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/firing_range.webp')]\",\r\n  FloodedValley:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/flooded_valley.webp')]\",\r\n  FourCircles:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/four_circles.webp')]\",\r\n  FrozenOver:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/frozen_over.webp')]\",\r\n  Geared:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/geared.webp')]\",\r\n  Haunted:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/haunted.webp')]\",\r\n  Hedge:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/hedge.webp')]\",\r\n  HighFinance:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/high_finance.webp')]\",\r\n  Infernal:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/infernal.webp')]\",\r\n  InTheLoop:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/in_the_loop.webp')]\",\r\n  KartsNDarts:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/karts_n_darts.webp')]\",\r\n  Logs: \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/logs.webp')]\",\r\n  LotusIsland:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.5),rgba(48,47,61,1)),url('images/maps/lotus_island.webp')]\",\r\n  LuminousCove:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.5),rgba(48,47,61,1)),url('images/maps/luminous_cove.webp')]\",\r\n  Mesa: \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/mesa.webp')]\",\r\n  MiddleOfTheRoad:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/middle_of_the_road.webp')]\",\r\n  MidnightMansion:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/midnight_mansion.webp')]\",\r\n  MonkeyMeadow:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/monkey_meadow.webp')]\",\r\n  MoonLanding:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/moon_landing.webp')]\",\r\n  MuddyPuddles:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/muddy_puddles.webp')]\",\r\n  OffTheCoast:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/off_the_coast.webp')]\",\r\n  OneTwoTree:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/one_two_tree.webp')]\",\r\n  Ouch: \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/ouch.webp')]\",\r\n  ParkPath:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/park_path.webp')]\",\r\n  PatsPond:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/pats_pond.webp')]\",\r\n  Peninsula:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/peninsula.webp')]\",\r\n  Polyphemus:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/polyphemus.webp')]\",\r\n  Quad: \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/quad.webp')]\",\r\n  Quarry:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/quarry.webp')]\",\r\n  QuietStreet:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/quiet_street.webp')]\",\r\n  Rake: \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/rake.webp')]\",\r\n  Ravine:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/ravine.webp')]\",\r\n  Resort:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/resort.webp')]\",\r\n  Sanctuary:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/sanctuary.webp')]\",\r\n  Scrapyard:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/scrapyard.webp')]\",\r\n  Skates:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/skates.webp')]\",\r\n  SpiceIslands:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/spice_islands.webp')]\",\r\n  Spillway:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/spillway.webp')]\",\r\n  SpringSpring:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/spring_spring.webp')]\",\r\n  Streambed:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/streambed.webp')]\",\r\n  SulfurSprings:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/sulfur_springs.webp')]\",\r\n  SunkenColumns:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/sunken_columns.webp')]\",\r\n  TheCabin:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/the_cabin.webp')]\",\r\n  Tinkerton:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/tinkerton.webp')]\",\r\n  TownCenter:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/town_center.webp')]\",\r\n  TownCentre:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/town_centre.webp')]\",\r\n  TreeStump:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/tree_stump.webp')]\",\r\n  Tutorial:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/tutorial.webp')]\",\r\n  Underground:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/underground.webp')]\",\r\n  WaterPark:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/water_park.webp')]\",\r\n  WinterPark:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/winter_park.webp')]\",\r\n  Workshop:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/workshop.webp')]\",\r\n  XFactor:\r\n    \"bg-[linear-gradient(to_bottom,rgba(48,47,61,0.4),rgba(48,47,61,1)),url('images/maps/x_factor.webp')]\",\r\n};\r\n\r\nexport const relicImages = {\r\n  Abilitized: abilitizedImage,\r\n  AirAndSea: airAndSeaImage,\r\n  AlchemistTouch: alchemistTouchImage,\r\n  BiggerBloonSabotage: biggerBloonSabotageImage,\r\n  BoxOfChocolates: boxOfChocolatesImage,\r\n  BoxOfMonkey: boxOfMonkeyImage,\r\n  BrokenHeart: brokenHeartImage,\r\n  CamoFlogged: camoFloggedImage,\r\n  CamoTrap: camoTrapImage,\r\n  DeepHeat: deepHeatImage,\r\n  DurableShots: durableShotsImage,\r\n  ElDorado: elDoradoImage,\r\n  ExtraEmpowered: extraEmpoweredImage,\r\n  FlintTips: flintTipsImage,\r\n  Fortifried: fortifriedImage,\r\n  GlueTrap: glueTrapImage,\r\n  GoingTheDistance: goingTheDistanceImage,\r\n  HardBaked: hardBakedImage,\r\n  Heartless: heartlessImage,\r\n  HeroBoost: heroBoostImage,\r\n  MagicMonkeys: magicMonkeysImage,\r\n  ManaBulwark: manaBulwarkImage,\r\n  MarchingBoots: marchingBootsImage,\r\n  MilitaryMonkeys: militaryMonkeysImage,\r\n  MoabClash: moabClashImage,\r\n  MoabMine: moabMineImage,\r\n  MonkeyBoost: monkeyBoostImage,\r\n  MonkeyTycoon: monkeyTycoonImage,\r\n  PrimaryPrimates: primaryPrimatesImage,\r\n  Regeneration: regenerationImage,\r\n  Restoration: restorationImage,\r\n  RoadSpikes: roadSpikesImage,\r\n  RoundingUp: roundingUpImage,\r\n  RoyalTreatment: royalTreatmentImage,\r\n  Sharpsplosion: sharpsplosionImage,\r\n  StartingStash: startingStashImage,\r\n  SuperMonkeyStorm: superMonkeyStormImage,\r\n  SupportSimians: supportSimiansImage,\r\n  Techbot: techbotImage,\r\n  Thrive: thriveImage,\r\n};\r\n\r\nexport const tileImages = {\r\n  Banner: bannerImage,\r\n  Relic: relicImage,\r\n  Regular: blankImage,\r\n  TeamFirstCapture: blankImage,\r\n};\r\n\r\nexport const gameTypeImages = {\r\n  4: bloonariusImage,\r\n  8: leastCashImage,\r\n  9: leastTiersImage,\r\n  2: raceImage,\r\n};\r\n\r\nexport const raceMedalImages = {\r\n  black_diamond: raceFirstImage,\r\n  red_diamond: raceSecondImage,\r\n  diamond: raceThirdImage,\r\n  gold_diamond: raceTop50Image,\r\n  double_gold: raceTop1PerImage,\r\n  gold_silver: raceTop10PerImage,\r\n  double_silver: raceTop25PerImage,\r\n  silver: raceTop50PerImage,\r\n  bronze: raceTop75PerImage,\r\n};\r\n\r\nexport const raceMedalReward = {\r\n  black_diamond: \"1st Place\",\r\n  red_diamond: \"2nd Place\",\r\n  diamond: \"3rd Place\",\r\n  gold_diamond: \"Top 50\",\r\n  double_gold: \"Top 1%\",\r\n  gold_silver: \"Top 10%\",\r\n  double_silver: \"Top 25%\",\r\n  silver: \"Top 50%\",\r\n  bronze: \"Top 75%\",\r\n};\r\n\r\nexport const bossNormalMedalImages = {\r\n  black_diamond: bossFirstImage,\r\n  red_diamond: bossSecondImage,\r\n  diamond: bossThirdImage,\r\n  gold_diamond: bossTop50Image,\r\n  double_gold: bossTop1PerImage,\r\n  gold_silver: bossTop10PerImage,\r\n  double_silver: bossTop25PerImage,\r\n  silver: bossTop50PerImage,\r\n  bronze: bossTop75PerImage,\r\n};\r\n\r\nexport const bossEliteMedalImages = {\r\n  black_diamond: bossEliteFirstImage,\r\n  red_diamond: bossEliteSecondImage,\r\n  diamond: bossEliteThirdImage,\r\n  gold_diamond: bossEliteTop50Image,\r\n  double_gold: bossEliteTop1PerImage,\r\n  gold_silver: bossEliteTop10PerImage,\r\n  double_silver: bossEliteTop25PerImage,\r\n  silver: bossEliteTop50PerImage,\r\n  bronze: bossEliteTop75PerImage,\r\n};\r\n\r\nexport const ctPlayerMedalImages = {\r\n  diamond: ctPlayerTop25Image,\r\n  gold_diamond: ctPlayerTop100Image,\r\n  double_gold: ctPlayerTop1PerImage,\r\n  gold_silver: ctPlayerTop10PerImage,\r\n  double_silver: ctPlayerTop25PerImage,\r\n  silver: ctPlayerTop50PerImage,\r\n  bronze: ctPlayerTop75PerImage,\r\n};\r\n\r\nexport const ctTeamMedalImages = {\r\n  black_diamond: ctTeamFirstImage,\r\n  red_diamond: ctTeamSecondImage,\r\n  diamond: ctTeamThirdImage,\r\n  gold_diamond: ctTeamTop25Image,\r\n  double_gold: ctTeamTop100Image,\r\n  gold_silver: ctTeamTop1PerImage,\r\n  double_silver: ctTeamTop10PerImage,\r\n  silver: ctTeamTop25PerImage,\r\n  bronze: ctTeamTop75PerImage,\r\n};\r\n\r\nexport const ctTeamLocalMedalImages = {\r\n  diamond: ctTeamLocal1,\r\n  double_gold: ctTeamLocal2,\r\n  silver: ctTeamLocal3,\r\n  bronze: ctTeamLocal4,\r\n};\r\n\r\nexport const bloonStyle: Record<Bloon, string> = {\r\n  Bad: \"bg-[#a700b5] outline outline-2 outline-[#f0dff3]\",\r\n  BadFortified: \"bg-[#a700b5]\",\r\n  Bfb: \"bg-[#c10000] outline outline-2 outline-[#f2d1d5]\",\r\n  BfbFortified: \"bg-[#c10000] outline outline-2 outline-[#f2d1d5]\",\r\n  Black: \"bg-[#121212]\",\r\n  BlackCamo: \"bg-[#060606]\",\r\n  BlackRegrow: \"bg-[#121212]\",\r\n  BlackRegrowCamo: \"bg-[#060606]\",\r\n  Blue: \"bg-[#2093df]\",\r\n  BlueCamo: \"bg-[#15517f]\",\r\n  BlueRegrow: \"bg-[#2093df]\",\r\n  BlueRegrowCamo: \"bg-[#15517f]\",\r\n  Ceramic: \"bg-[#be6b1c] outline outline-2 outline-[#61370b]\",\r\n  CeramicCamo: \"bg-[#774223] outline outline-2 outline-[#61370b]\",\r\n  CeramicFortified: \"bg-[#be6b1c] outline outline-2 outline-[#61370b]\",\r\n  CeramicFortifiedCamo: \"bg-[#774223] outline outline-2 outline-[#61370b]\",\r\n  CeramicRegrow: \"bg-[#be6b1c] outline outline-2 outline-[#61370b]\",\r\n  CeramicRegrowCamo: \"bg-[#774223] outline outline-2 outline-[#61370b]\",\r\n  CeramicRegrowFortified: \"bg-[#be6b1c] outline outline-2 outline-[#61370b]\",\r\n  CeramicRegrowFortifiedCamo:\r\n    \"bg-[#774223] outline outline-2 outline-[#61370b]\",\r\n  DdtCamo: \"bg-[#454b41] outline outline-2 outline-[#e1e3df]\",\r\n  DdtFortifiedCamo: \"bg-[#454b41] outline outline-2 outline-[#e1e3df]\",\r\n  Green: \"bg-[#70a404]\",\r\n  GreenCamo: \"bg-[#497020]\",\r\n  GreenRegrow: \"bg-[#70a404]\",\r\n  GreenRegrowCamo: \"bg-[#497020]\",\r\n  Lead: \"bg-[#7c7c7c] outline outline-2 outline-[#272727]\",\r\n  LeadCamo: \"bg-[#2c2c2c] outline outline-2 outline-[#272727]\",\r\n  LeadFortified: \"bg-[#7c7c7c] outline outline-2 outline-[#272727]\",\r\n  LeadFortifiedCamo: \"bg-[#2c2c2c] outline outline-2 outline-[#272727]\",\r\n  LeadRegrow: \"bg-[#7c7c7c] outline outline-2 outline-[#272727]\",\r\n  LeadRegrowCamo: \"bg-[#2c2c2c] outline outline-2 outline-[#272727]\",\r\n  LeadRegrowFortified: \"bg-[#7c7c7c] outline outline-2 outline-[#272727]\",\r\n  LeadRegrowFortifiedCamo: \"bg-[#2c2c2c] outline outline-2 outline-[#272727]\",\r\n  Moab: \"bg-[#36a1e4] outline outline-2 outline-[#f2fafd]\",\r\n  MoabFortified: \"bg-[#36a1e4] outline outline-2 outline-[#f2fafd]\",\r\n  Pink: \"bg-[#f04658]\",\r\n  PinkCamo: \"bg-[#7e1340]\",\r\n  PinkRegrow: \"bg-[#f04658]\",\r\n  PinkRegrowCamo: \"bg-[#7e1340]\",\r\n  Purple: \"bg-[#8f1edf] outline outline-2 outline-[#00f1ff]\",\r\n  PurpleCamo: \"bg-[#461a81] outline outline-2 outline-[#00f1ff]\",\r\n  PurpleRegrow: \"bg-[#8f1edf] outline outline-2 outline-[#00f1ff]\",\r\n  PurpleRegrowCamo: \"bg-[#461a81] outline outline-2 outline-[#00f1ff]\",\r\n  Rainbow:\r\n    \"bg-[repeating-linear-gradient(125deg,#ed1414,#ed1414_0.4rem,#ffac23_0.4rem,#ffac23_0.8rem,#ffd306_0.8rem,#ffd306_1.2rem,#70a404_1.2rem,#70a404_1.6rem,#2093df_1.6rem,#2093df_2rem,#de33de_2rem,#de33de_2.4rem)]\",\r\n  RainbowCamo:\r\n    \"bg-[repeating-linear-gradient(125deg,#821b1b,#821b1b_0.4rem,#7a5414_0.4rem,#7a5414_0.8rem,#a7752c_0.8rem,#a7752c_1.2rem,#497020_1.2rem,#497020_1.6rem,#15517f_1.6rem,#15517f_2rem,#7e1340_2rem,#7e1340_2.4rem)]\",\r\n  RainbowRegrow:\r\n    \"bg-[repeating-linear-gradient(125deg,#ed1414,#ed1414_0.4rem,#ffac23_0.4rem,#ffac23_0.8rem,#ffd306_0.8rem,#ffd306_1.2rem,#70a404_1.2rem,#70a404_1.6rem,#2093df_1.6rem,#2093df_2rem,#de33de_2rem,#de33de_2.4rem)]\",\r\n  RainbowRegrowCamo:\r\n    \"bg-[repeating-linear-gradient(125deg,#821b1b,#821b1b_0.4rem,#7a5414_0.4rem,#7a5414_0.8rem,#a7752c_0.8rem,#a7752c_1.2rem,#497020_1.2rem,#497020_1.6rem,#15517f_1.6rem,#15517f_2rem,#7e1340_2rem,#7e1340_2.4rem)]\",\r\n  Red: \"bg-[#ed1414]\",\r\n  RedCamo: \"bg-[#821b1b]\",\r\n  RedRegrow: \"bg-[#ed1414]\",\r\n  RedRegrowCamo: \"bg-[#821b1b]\",\r\n  White: \"bg-[#d3d3d3]\",\r\n  WhiteCamo: \"bg-[#7c7c7c]\",\r\n  WhiteRegrow: \"bg-[#d3d3d3]\",\r\n  WhiteRegrowCamo: \"bg-[#7c7c7c]\",\r\n  Yellow: \"bg-[#ffd306]\",\r\n  YellowCamo: \"bg-[#a7752c]\",\r\n  YellowRegrow: \"bg-[#ffd306]\",\r\n  YellowRegrowCamo: \"bg-[#a7752c]\",\r\n  Zebra:\r\n    \"bg-[repeating-linear-gradient(125deg,#121212,#121212_1rem,#d3d3d3_1rem,#d3d3d3_2rem)]\",\r\n  ZebraCamo: \"\",\r\n  ZebraRegrow:\r\n    \"bg-[repeating-linear-gradient(125deg,#121212,#121212_1rem,#d3d3d3_1rem,#d3d3d3_2rem)]\",\r\n  ZebraRegrowCamo: \"\",\r\n  Zomg: \"bg-[#6b7666] outline outline-2 outline-[#9cfb00]\",\r\n  ZomgFortified: \"bg-[#6b7666] outline outline-2 outline-[#9cfb00]\",\r\n};\r\n\r\nexport const bloonImage: Record<Bloon, string> = {\r\n  Bad: badImage,\r\n  BadFortified: badFortifiedImage,\r\n  Bfb: bfbImage,\r\n  BfbFortified: bfbFortifiedImage,\r\n  Black: blackImage,\r\n  BlackCamo: blackCamoImage,\r\n  BlackRegrow: blackRegrowImage,\r\n  BlackRegrowCamo: blackRegrowCamoImage,\r\n  Blue: blueImage,\r\n  BlueCamo: blueCamoImage,\r\n  BlueRegrow: blueRegrowImage,\r\n  BlueRegrowCamo: blueRegrowCamoImage,\r\n  Ceramic: ceramicImage,\r\n  CeramicCamo: ceramicCamoImage,\r\n  CeramicFortified: ceramicFortifiedImage,\r\n  CeramicFortifiedCamo: ceramicFortifiedCamoImage,\r\n  CeramicRegrow: ceramicRegrowImage,\r\n  CeramicRegrowCamo: ceramicRegrowCamoImage,\r\n  CeramicRegrowFortified: ceramicRegrowFortifiedImage,\r\n  CeramicRegrowFortifiedCamo: ceramicRegrowFortifiedCamoImage,\r\n  DdtCamo: ddtImage,\r\n  DdtFortifiedCamo: ddtFortifiedImage,\r\n  Green: greenImage,\r\n  GreenCamo: greenCamoImage,\r\n  GreenRegrow: greenRegrowImage,\r\n  GreenRegrowCamo: greenRegrowCamoImage,\r\n  Lead: leadImage,\r\n  LeadCamo: leadCamoImage,\r\n  LeadFortified: leadFortifiedImage,\r\n  LeadFortifiedCamo: leadFortifiedCamoImage,\r\n  LeadRegrow: leadRegrowImage,\r\n  LeadRegrowCamo: leadRegrowCamoImage,\r\n  LeadRegrowFortified: leadRegrowFortifiedImage,\r\n  LeadRegrowFortifiedCamo: leadRegrowFortifiedCamoImage,\r\n  Moab: moabImage,\r\n  MoabFortified: moabFortifiedImage,\r\n  Pink: pinkImage,\r\n  PinkCamo: pinkCamoImage,\r\n  PinkRegrow: pinkRegrowImage,\r\n  PinkRegrowCamo: pinkRegrowCamoImage,\r\n  Purple: purpleImage,\r\n  PurpleCamo: purpleCamoImage,\r\n  PurpleRegrow: purpleRegrowImage,\r\n  PurpleRegrowCamo: purpleRegrowCamoImage,\r\n  Rainbow: rainbowImage,\r\n  RainbowCamo: rainbowCamoImage,\r\n  RainbowRegrow: rainbowRegrowImage,\r\n  RainbowRegrowCamo: rainbowRegrowCamoImage,\r\n  Red: redImage,\r\n  RedCamo: redCamoImage,\r\n  RedRegrow: redRegrowImage,\r\n  RedRegrowCamo: redRegrowCamoImage,\r\n  White: whiteImage,\r\n  WhiteCamo: whiteCamoImage,\r\n  WhiteRegrow: whiteRegrowImage,\r\n  WhiteRegrowCamo: whiteRegrowCamoImage,\r\n  Yellow: yellowImage,\r\n  YellowCamo: yellowCamoImage,\r\n  YellowRegrow: yellowRegrowImage,\r\n  YellowRegrowCamo: yellowRegrowCamoImage,\r\n  Zebra: zebraImage,\r\n  ZebraCamo: zebraCamoImage,\r\n  ZebraRegrow: zebraRegrowImage,\r\n  ZebraRegrowCamo: zebraRegrowCamoImage,\r\n  Zomg: zomgImage,\r\n  ZomgFortified: zomgFortifiedImage,\r\n};\r\n"],"names":["_ref","size","_jsx","src","loading","alt","style","width","roundEven5","num","Math","floor","round","convertMsToTimeFormat","ms","roundMs","arguments","length","undefined","hours","minutes","seconds","milliseconds","roundedMs","formattedHours","toString","padStart","formattedMinutes","formattedSeconds","formattedMilliseconds","concat","convertMsToSecondsFormat","timeAgo","timestamp","elapsed","Date","now","msPerMinute","msPerSecond","msPerHour","msPerDay","days","formatGameEntityName","entity","replace","match","toLowerCase","formatGoldenAppleDiscordEmote","relic","formatToUpperCase","split","map","word","charAt","toUpperCase","slice","join","placeToRaceMedal","place","totalEntries","percentile","raceMedalImages","black_diamond","red_diamond","diamond","gold_diamond","double_gold","gold_silver","double_silver","silver","bronze","placeToBossNormalMedal","bossNormalMedalImages","placeToBossEliteMedal","bossEliteMedalImages","placeToCtPlayerMedal","ctPlayerMedalImages","placeToCtTeamMedal","ctTeamMedalImages","placeToCtHistoryEmote","placeToCtTeamLocalMedal","ctTeamLocalMedalImages","appendOrdinalSuffix","number","j","k","convertGameTypeToString","gameType","formatDateToEventHighlightDate","epochMs","date","day","getUTCDate","month","toLocaleString","timeZone","year","getUTCFullYear","towerTypes","Alchemist","BananaFarm","BeastHandler","BoomerangMonkey","BombShooter","DartMonkey","DartlingGunner","Desperado","Druid","EngineerMonkey","GlueGunner","HeliPilot","IceMonkey","Mermonkey","MonkeyAce","MonkeyBuccaneer","MonkeySub","MonkeyVillage","MortarMonkey","NinjaMonkey","SniperMonkey","SpikeFactory","SuperMonkey","TackShooter","WizardMonkey","AdmiralBrickell","Adora","Benjamin","CaptainChurchill","Corvus","Etienne","Ezili","Geraldo","Gwendolin","ObynGreenfoot","PatFusty","Psi","Quincy","Rosalia","Sauda","StrikerJones","ChosenPrimaryHero","prettyEventNames","Race","Boss","Boss2","Boss3","Boss4","CtPlayer","CtTeam","gameTypeToSubGameTypeVal","race","boss","least_cash","least_tiers","towerImages","alchemistImage","bananaFarmImage","beastHandlerImage","boomerangMonkeyImage","bombShooterImage","dartMonkeyImage","dartlingGunnerImage","desperadoImage","druidImage","engineerMonkeyImage","glueGunnerImage","heliPilotImage","iceMonkeyImage","mermonkeyImage","monkeyAceImage","monkeyBuccaneerImage","monkeySubImage","monkeyVillageImage","mortarMonkeyImage","ninjaMonkeyImage","sniperMonkeyImage","spikeFactoryImage","superMonkeyImage","tackShooterImage","wizardMonkeyImage","admiralBrickellImage","adoraImage","benjaminImage","captainChurchillImage","corvusImage","etienneImage","eziliImage","geraldoImage","gwendolinImage","obynGreenfootImage","patFustyImage","psiImage","quincyImage","rosaliaImage","saudaImage","strikerJonesImage","mapImages","AdorasTemple","AlpineRun","AncientPortal","AnotherBrick","Balance","Bazaar","Blons","BloodyPuddles","BloonariusPrime","CandyFalls","Cargo","Carved","CastleRevenge","Chutes","Cornfield","CoveredGarden","Cracked","Cubism","DarkCastle","DarkDungeons","DarkPath","Downstream","Encrypted","EndOfTheRoad","Erosion","FiringRange","FloodedValley","FourCircles","FrozenOver","Geared","Haunted","Hedge","HighFinance","Infernal","InTheLoop","KartsNDarts","Logs","LotusIsland","LuminousCove","Mesa","MiddleOfTheRoad","MidnightMansion","MonkeyMeadow","MoonLanding","MuddyPuddles","OffTheCoast","OneTwoTree","Ouch","ParkPath","PatsPond","Peninsula","Polyphemus","Quad","Quarry","QuietStreet","Rake","Ravine","Resort","Sanctuary","Scrapyard","Skates","SpiceIslands","Spillway","SpringSpring","Streambed","SulfurSprings","SunkenColumns","TheCabin","Tinkerton","TownCenter","TownCentre","TreeStump","Tutorial","Underground","WaterPark","WinterPark","Workshop","XFactor","relicImages","Abilitized","abilitizedImage","AirAndSea","airAndSeaImage","AlchemistTouch","alchemistTouchImage","BiggerBloonSabotage","biggerBloonSabotageImage","BoxOfChocolates","boxOfChocolatesImage","BoxOfMonkey","boxOfMonkeyImage","BrokenHeart","brokenHeartImage","CamoFlogged","camoFloggedImage","CamoTrap","camoTrapImage","DeepHeat","deepHeatImage","DurableShots","durableShotsImage","ElDorado","elDoradoImage","ExtraEmpowered","extraEmpoweredImage","FlintTips","flintTipsImage","Fortifried","fortifriedImage","GlueTrap","glueTrapImage","GoingTheDistance","goingTheDistanceImage","HardBaked","hardBakedImage","Heartless","heartlessImage","HeroBoost","heroBoostImage","MagicMonkeys","magicMonkeysImage","ManaBulwark","manaBulwarkImage","MarchingBoots","marchingBootsImage","MilitaryMonkeys","militaryMonkeysImage","MoabClash","moabClashImage","MoabMine","moabMineImage","MonkeyBoost","monkeyBoostImage","MonkeyTycoon","monkeyTycoonImage","PrimaryPrimates","primaryPrimatesImage","Regeneration","regenerationImage","Restoration","restorationImage","RoadSpikes","roadSpikesImage","RoundingUp","roundingUpImage","RoyalTreatment","royalTreatmentImage","Sharpsplosion","sharpsplosionImage","StartingStash","startingStashImage","SuperMonkeyStorm","superMonkeyStormImage","SupportSimians","supportSimiansImage","Techbot","techbotImage","Thrive","thriveImage","tileImages","Banner","bannerImage","Relic","relicImage","Regular","blankImage","TeamFirstCapture","gameTypeImages","bloonariusImage","leastCashImage","leastTiersImage","raceImage","raceFirstImage","raceSecondImage","raceThirdImage","raceTop50Image","raceTop1PerImage","raceTop10PerImage","raceTop25PerImage","raceTop50PerImage","raceTop75PerImage","raceMedalReward","bossFirstImage","bossSecondImage","bossThirdImage","bossTop50Image","bossTop1PerImage","bossTop10PerImage","bossTop25PerImage","bossTop50PerImage","bossTop75PerImage","bossEliteFirstImage","bossEliteSecondImage","bossEliteThirdImage","bossEliteTop50Image","bossEliteTop1PerImage","bossEliteTop10PerImage","bossEliteTop25PerImage","bossEliteTop50PerImage","bossEliteTop75PerImage","ctPlayerTop25Image","ctPlayerTop100Image","ctPlayerTop1PerImage","ctPlayerTop10PerImage","ctPlayerTop25PerImage","ctPlayerTop50PerImage","ctPlayerTop75PerImage","ctTeamFirstImage","ctTeamSecondImage","ctTeamThirdImage","ctTeamTop25Image","ctTeamTop100Image","ctTeamTop1PerImage","ctTeamTop10PerImage","ctTeamTop25PerImage","ctTeamTop75PerImage","ctTeamLocal1","ctTeamLocal2","ctTeamLocal3","ctTeamLocal4","bloonStyle","Bad","BadFortified","Bfb","BfbFortified","Black","BlackCamo","BlackRegrow","BlackRegrowCamo","Blue","BlueCamo","BlueRegrow","BlueRegrowCamo","Ceramic","CeramicCamo","CeramicFortified","CeramicFortifiedCamo","CeramicRegrow","CeramicRegrowCamo","CeramicRegrowFortified","CeramicRegrowFortifiedCamo","DdtCamo","DdtFortifiedCamo","Green","GreenCamo","GreenRegrow","GreenRegrowCamo","Lead","LeadCamo","LeadFortified","LeadFortifiedCamo","LeadRegrow","LeadRegrowCamo","LeadRegrowFortified","LeadRegrowFortifiedCamo","Moab","MoabFortified","Pink","PinkCamo","PinkRegrow","PinkRegrowCamo","Purple","PurpleCamo","PurpleRegrow","PurpleRegrowCamo","Rainbow","RainbowCamo","RainbowRegrow","RainbowRegrowCamo","Red","RedCamo","RedRegrow","RedRegrowCamo","White","WhiteCamo","WhiteRegrow","WhiteRegrowCamo","Yellow","YellowCamo","YellowRegrow","YellowRegrowCamo","Zebra","ZebraCamo","ZebraRegrow","ZebraRegrowCamo","Zomg","ZomgFortified","bloonImage","badImage","badFortifiedImage","bfbImage","bfbFortifiedImage","blackImage","blackCamoImage","blackRegrowImage","blackRegrowCamoImage","blueImage","blueCamoImage","blueRegrowImage","blueRegrowCamoImage","ceramicImage","ceramicCamoImage","ceramicFortifiedImage","ceramicFortifiedCamoImage","ceramicRegrowImage","ceramicRegrowCamoImage","ceramicRegrowFortifiedImage","ceramicRegrowFortifiedCamoImage","ddtImage","ddtFortifiedImage","greenImage","greenCamoImage","greenRegrowImage","greenRegrowCamoImage","leadImage","leadCamoImage","leadFortifiedImage","leadFortifiedCamoImage","leadRegrowImage","leadRegrowCamoImage","leadRegrowFortifiedImage","leadRegrowFortifiedCamoImage","moabImage","moabFortifiedImage","pinkImage","pinkCamoImage","pinkRegrowImage","pinkRegrowCamoImage","purpleImage","purpleCamoImage","purpleRegrowImage","purpleRegrowCamoImage","rainbowImage","rainbowCamoImage","rainbowRegrowImage","rainbowRegrowCamoImage","redImage","redCamoImage","redRegrowImage","redRegrowCamoImage","whiteImage","whiteCamoImage","whiteRegrowImage","whiteRegrowCamoImage","yellowImage","yellowCamoImage","yellowRegrowImage","yellowRegrowCamoImage","zebraImage","zebraCamoImage","zebraRegrowImage","zebraRegrowCamoImage","zomgImage","zomgFortifiedImage"],"sourceRoot":""}